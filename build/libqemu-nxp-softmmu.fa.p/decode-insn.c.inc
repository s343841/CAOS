/* This file is autogenerated by scripts/decodetree.py.  */

typedef struct {
    int bp4;
    int bp1;
    int rd;
} arg_bp4_bp1_rd;

typedef struct {
    int bp5;
} arg_bp5;

typedef struct {
    int bp5;
    int imm15;
} arg_bp5_imm15;

typedef struct {
    int bp4;
    int bp1;
    int rd;
} arg_bp_4_bp1_rd;

typedef struct {
    int rp;
    int op5;
    int disp11;
} arg_cache;

typedef struct {
    int coh;
    int rd;
    int imm;
} arg_coh_rd_imm;

typedef struct {
    int cond4;
    int rd;
} arg_cond4_rd;

typedef struct {
    int disp2;
    int disp1;
    int cond;
    int disp0;
} arg_cond_disp21;

typedef struct {
    int cp;
    int opl;
    int opm;
    int oph;
    int crd;
    int crx;
    int cry;
} arg_cop;

typedef struct {
    int rd;
} arg_decode_insn59;

typedef struct {
} arg_decode_insn60;

typedef struct {
    int disp;
} arg_disp;

typedef struct {
    int disp8;
    int disp2;
} arg_disp8_disp2;

typedef struct {
    int rp;
    int rd;
    int part;
    int disp12;
} arg_ldinsb;

typedef struct {
    int rp;
    int rd;
    int part;
    int disp12;
} arg_ldinsh;

typedef struct {
    int rs;
    int addr;
} arg_mtdr;

typedef struct {
    int op8;
} arg_op8;

typedef struct {
    int list;
} arg_popm;

typedef struct {
    int list;
} arg_pushm;

typedef struct {
    int rd3;
    int rp;
    int disp;
} arg_rd3_rp_disp;

typedef struct {
    int rd;
    int bp4;
    int bp1;
} arg_rd_bp4_bp1;

typedef struct {
    int rd;
    int bp5;
} arg_rd_bp5;

typedef struct {
    int rd;
    int bp5;
    int sa5;
} arg_rd_bp5_sa5;

typedef struct {
    int rd;
    int cond4;
    int imm8;
} arg_rd_cond4_imm8;

typedef struct {
    int rd;
    int disp;
} arg_rd_disp;

typedef struct {
    int rd;
    int disp5;
    int rp;
} arg_rd_disp5_rp;

typedef struct {
    int rd;
    int disp;
} arg_rd_disp8;

typedef struct {
    int rd;
    int f;
    int cond4;
    int imm8;
} arg_rd_f_cond4_imm8;

typedef struct {
    int rd;
    int imm16;
} arg_rd_imm16;

typedef struct {
    int immu;
    int immm;
    int rd;
    int imml;
} arg_rd_imm21;

typedef struct {
    int rd;
    int imm6;
} arg_rd_imm6;

typedef struct {
    int rd;
    int imm8;
} arg_rd_imm8;

typedef struct {
    int rp;
    int rd;
} arg_rd_rp;

typedef struct {
    int rd;
    int rp;
    int cond4;
    int disp9;
} arg_rd_rp_cond4_disp9;

typedef struct {
    int rd;
    int rp;
    int disp16;
} arg_rd_rp_disp16;

typedef struct {
    int rd;
    int rp;
    int disp3;
} arg_rd_rp_disp3;

typedef struct {
    int rd;
    int rs;
    int bp5;
    int w5;
} arg_rd_rs_bp5_w5;

typedef struct {
    int rd;
    int rs;
    int cond4;
} arg_rd_rs_cond4;

typedef struct {
    int rd;
    int rs;
    int imm8;
} arg_rd_rs_imm8;

typedef struct {
    int rd;
    int rs;
    int sa5;
} arg_rd_rs_sa5;

typedef struct {
    int rd;
    int rx;
    int ry;
    int cond4;
} arg_rd_rx_ry_cond4;

typedef struct {
    int rd;
    int rx;
    int ry;
    int sa;
} arg_rd_rx_ry_sa;

typedef struct {
    int rd;
    int rx;
    int ry;
    int sa5;
} arg_rd_rx_ry_sa5;

typedef struct {
    int rd;
    int sr;
} arg_rd_sr;

typedef struct {
    int rp;
    int disp;
} arg_rp_disp;

typedef struct {
    int rp;
    int rd;
    int disp12;
} arg_rp_rd_disp12;

typedef struct {
    int rp;
    int rs;
} arg_rp_rs;

typedef struct {
    int rp;
    int rs;
    int disp16;
} arg_rp_rs_disp16;

typedef struct {
    int rp;
    int rs;
    int imm16;
} arg_rp_rs_imm16;

typedef struct {
    int rs;
} arg_rs;

typedef struct {
    int rs;
    int rd;
} arg_rs_rd;

typedef struct {
    int rs;
    int rd;
} arg_rs_rd_32;

typedef struct {
    int rs;
    int rd;
    int imm16;
} arg_rs_rd_disp16;

typedef struct {
    int rs;
    int rp;
    int disp4;
} arg_rs_rp_disp4;

typedef struct {
    int rs;
    int sr;
} arg_rs_sr;

typedef struct {
    int rx;
    int ry;
    int cond;
    int rd;
} arg_rx_ry_cond_rd;

typedef struct {
    int rx;
    int ry;
    int imm;
    int rd;
} arg_rx_ry_imm_rd;

typedef struct {
    int rx;
    int ry;
    int rd;
} arg_rx_ry_rd;

typedef struct {
    int rx;
    int ry;
    int x;
    int y;
    int rd;
} arg_rx_ry_x_y_rd;

typedef struct {
    int sr;
} arg_sr;

typedef struct {
    int op;
    int rp;
    int list;
} arg_stm;

typedef arg_decode_insn59 arg_ABS;
static bool trans_ABS(DisasContext *ctx, arg_ABS *a);
typedef arg_disp arg_ACALL;
static bool trans_ACALL(DisasContext *ctx, arg_ACALL *a);
typedef arg_decode_insn59 arg_ACR;
static bool trans_ACR(DisasContext *ctx, arg_ACR *a);
typedef arg_rx_ry_rd arg_ADC;
static bool trans_ADC(DisasContext *ctx, arg_ADC *a);
typedef arg_rs_rd arg_ADD_f1;
static bool trans_ADD_f1(DisasContext *ctx, arg_ADD_f1 *a);
typedef arg_rd_rx_ry_sa arg_ADD_f2;
static bool trans_ADD_f2(DisasContext *ctx, arg_ADD_f2 *a);
typedef arg_rx_ry_cond_rd arg_ADD_cond;
static bool trans_ADD_cond(DisasContext *ctx, arg_ADD_cond *a);
typedef arg_rx_ry_rd arg_ADDABS;
static bool trans_ADDABS(DisasContext *ctx, arg_ADDABS *a);
typedef arg_rx_ry_x_y_rd arg_ADDHHW;
static bool trans_ADDHHW(DisasContext *ctx, arg_ADDHHW *a);
typedef arg_rs_rd arg_AND_f1;
static bool trans_AND_f1(DisasContext *ctx, arg_AND_f1 *a);
typedef arg_rd_rx_ry_sa5 arg_AND_f2;
static bool trans_AND_f2(DisasContext *ctx, arg_AND_f2 *a);
typedef arg_rd_rx_ry_sa5 arg_AND_f3;
static bool trans_AND_f3(DisasContext *ctx, arg_AND_f3 *a);
typedef arg_rx_ry_cond_rd arg_AND_cond;
static bool trans_AND_cond(DisasContext *ctx, arg_AND_cond *a);
typedef arg_coh_rd_imm arg_ANDH;
static bool trans_ANDH(DisasContext *ctx, arg_ANDH *a);
typedef arg_coh_rd_imm arg_ANDL;
static bool trans_ANDL(DisasContext *ctx, arg_ANDL *a);
typedef arg_rs_rd arg_ANDN;
static bool trans_ANDN(DisasContext *ctx, arg_ANDN *a);
typedef arg_rx_ry_rd arg_ASR_f1;
static bool trans_ASR_f1(DisasContext *ctx, arg_ASR_f1 *a);
typedef arg_bp_4_bp1_rd arg_ASR_f2;
static bool trans_ASR_f2(DisasContext *ctx, arg_ASR_f2 *a);
typedef arg_rd_rs_sa5 arg_ASR_f3;
static bool trans_ASR_f3(DisasContext *ctx, arg_ASR_f3 *a);
typedef arg_rd_rs_bp5_w5 arg_BFEXTS;
static bool trans_BFEXTS(DisasContext *ctx, arg_BFEXTS *a);
typedef arg_rd_rs_bp5_w5 arg_BFEXTU;
static bool trans_BFEXTU(DisasContext *ctx, arg_BFEXTU *a);
typedef arg_rd_rs_bp5_w5 arg_BFINS;
static bool trans_BFINS(DisasContext *ctx, arg_BFINS *a);
typedef arg_rd_bp5 arg_BLD;
static bool trans_BLD(DisasContext *ctx, arg_BLD *a);
typedef arg_rd_disp8 arg_BR_f1;
static bool trans_BR_f1(DisasContext *ctx, arg_BR_f1 *a);
typedef arg_cond_disp21 arg_BR_f2;
static bool trans_BR_f2(DisasContext *ctx, arg_BR_f2 *a);
typedef arg_decode_insn60 arg_BREAKPOINT;
static bool trans_BREAKPOINT(DisasContext *ctx, arg_BREAKPOINT *a);
typedef arg_decode_insn59 arg_BREV_r;
static bool trans_BREV_r(DisasContext *ctx, arg_BREV_r *a);
typedef arg_rd_bp5 arg_BST;
static bool trans_BST(DisasContext *ctx, arg_BST *a);
typedef arg_cache arg_CACHE;
static bool trans_CACHE(DisasContext *ctx, arg_CACHE *a);
typedef arg_decode_insn59 arg_CASTSH;
static bool trans_CASTSH(DisasContext *ctx, arg_CASTSH *a);
typedef arg_decode_insn59 arg_CASTSB;
static bool trans_CASTSB(DisasContext *ctx, arg_CASTSB *a);
typedef arg_decode_insn59 arg_CASTUH;
static bool trans_CASTUH(DisasContext *ctx, arg_CASTUH *a);
typedef arg_decode_insn59 arg_CASTUB;
static bool trans_CASTUB(DisasContext *ctx, arg_CASTUB *a);
typedef arg_bp_4_bp1_rd arg_CBR;
static bool trans_CBR(DisasContext *ctx, arg_CBR *a);
typedef arg_rs_rd_32 arg_CLZ;
static bool trans_CLZ(DisasContext *ctx, arg_CLZ *a);
typedef arg_decode_insn59 arg_COM;
static bool trans_COM(DisasContext *ctx, arg_COM *a);
typedef arg_cop arg_COP;
static bool trans_COP(DisasContext *ctx, arg_COP *a);
typedef arg_rs_rd_32 arg_CPB;
static bool trans_CPB(DisasContext *ctx, arg_CPB *a);
typedef arg_rs_rd_32 arg_CPH;
static bool trans_CPH(DisasContext *ctx, arg_CPH *a);
typedef arg_rs_rd arg_CPW_f1;
static bool trans_CPW_f1(DisasContext *ctx, arg_CPW_f1 *a);
typedef arg_rd_imm6 arg_CPW_f2;
static bool trans_CPW_f2(DisasContext *ctx, arg_CPW_f2 *a);
typedef arg_rd_imm21 arg_CPW_f3;
static bool trans_CPW_f3(DisasContext *ctx, arg_CPW_f3 *a);
typedef arg_rs_rd_32 arg_CPC_f1;
static bool trans_CPC_f1(DisasContext *ctx, arg_CPC_f1 *a);
typedef arg_decode_insn59 arg_CPC_f2;
static bool trans_CPC_f2(DisasContext *ctx, arg_CPC_f2 *a);
typedef arg_bp5 arg_CSRF;
static bool trans_CSRF(DisasContext *ctx, arg_CSRF *a);
typedef arg_bp5 arg_CSRFCZ;
static bool trans_CSRFCZ(DisasContext *ctx, arg_CSRFCZ *a);
typedef arg_rx_ry_rd arg_DIVS;
static bool trans_DIVS(DisasContext *ctx, arg_DIVS *a);
typedef arg_rx_ry_rd arg_DIVU;
static bool trans_DIVU(DisasContext *ctx, arg_DIVU *a);
typedef arg_rs_rd arg_EOR_f1;
static bool trans_EOR_f1(DisasContext *ctx, arg_EOR_f1 *a);
typedef arg_rd_rx_ry_sa5 arg_EOR_f2;
static bool trans_EOR_f2(DisasContext *ctx, arg_EOR_f2 *a);
typedef arg_rd_rx_ry_sa5 arg_EOR_f3;
static bool trans_EOR_f3(DisasContext *ctx, arg_EOR_f3 *a);
typedef arg_rx_ry_cond_rd arg_EOR_cond;
static bool trans_EOR_cond(DisasContext *ctx, arg_EOR_cond *a);
typedef arg_rd_imm16 arg_EORH;
static bool trans_EORH(DisasContext *ctx, arg_EORH *a);
typedef arg_rd_imm16 arg_EORL;
static bool trans_EORL(DisasContext *ctx, arg_EORL *a);
typedef arg_decode_insn60 arg_FRS;
static bool trans_FRS(DisasContext *ctx, arg_FRS *a);
typedef arg_decode_insn59 arg_ICALL;
static bool trans_ICALL(DisasContext *ctx, arg_ICALL *a);
typedef arg_rd_rp arg_LDD_f1;
static bool trans_LDD_f1(DisasContext *ctx, arg_LDD_f1 *a);
typedef arg_rd_rp arg_LDD_f2;
static bool trans_LDD_f2(DisasContext *ctx, arg_LDD_f2 *a);
typedef arg_rd_rp arg_LDD_f3;
static bool trans_LDD_f3(DisasContext *ctx, arg_LDD_f3 *a);
typedef arg_rp_rs_disp16 arg_LDD_f4;
static bool trans_LDD_f4(DisasContext *ctx, arg_LDD_f4 *a);
typedef arg_rd_rx_ry_sa arg_LDD_f5;
static bool trans_LDD_f5(DisasContext *ctx, arg_LDD_f5 *a);
typedef arg_rd_rp_disp16 arg_LDsb_f1;
static bool trans_LDsb_f1(DisasContext *ctx, arg_LDsb_f1 *a);
typedef arg_rd_rx_ry_sa arg_LDsb_f2;
static bool trans_LDsb_f2(DisasContext *ctx, arg_LDsb_f2 *a);
typedef arg_rd_rp_cond4_disp9 arg_LDsb_cond;
static bool trans_LDsb_cond(DisasContext *ctx, arg_LDsb_cond *a);
typedef arg_rd_rp arg_LDub_f1;
static bool trans_LDub_f1(DisasContext *ctx, arg_LDub_f1 *a);
typedef arg_rd_rp arg_LDub_f2;
static bool trans_LDub_f2(DisasContext *ctx, arg_LDub_f2 *a);
typedef arg_rd_rp_disp3 arg_LDub_f3;
static bool trans_LDub_f3(DisasContext *ctx, arg_LDub_f3 *a);
typedef arg_rd_rp_disp16 arg_LDUB_f4;
static bool trans_LDUB_f4(DisasContext *ctx, arg_LDUB_f4 *a);
typedef arg_rd_rx_ry_sa arg_LDub_f5;
static bool trans_LDub_f5(DisasContext *ctx, arg_LDub_f5 *a);
typedef arg_rd_rp_cond4_disp9 arg_LDUB_cond;
static bool trans_LDUB_cond(DisasContext *ctx, arg_LDUB_cond *a);
typedef arg_rd_rp arg_LDSH_f1;
static bool trans_LDSH_f1(DisasContext *ctx, arg_LDSH_f1 *a);
typedef arg_rd_rp arg_LDSH_f2;
static bool trans_LDSH_f2(DisasContext *ctx, arg_LDSH_f2 *a);
typedef arg_rd_rp_disp3 arg_LDSH_f3;
static bool trans_LDSH_f3(DisasContext *ctx, arg_LDSH_f3 *a);
typedef arg_rd_rp_disp16 arg_LDSH_f4;
static bool trans_LDSH_f4(DisasContext *ctx, arg_LDSH_f4 *a);
typedef arg_rd_rx_ry_sa arg_LDSH_f5;
static bool trans_LDSH_f5(DisasContext *ctx, arg_LDSH_f5 *a);
typedef arg_rd_rp_cond4_disp9 arg_LDSH_cond;
static bool trans_LDSH_cond(DisasContext *ctx, arg_LDSH_cond *a);
typedef arg_rd_rp arg_LDUH_f1;
static bool trans_LDUH_f1(DisasContext *ctx, arg_LDUH_f1 *a);
typedef arg_rd_rp arg_LDUH_f2;
static bool trans_LDUH_f2(DisasContext *ctx, arg_LDUH_f2 *a);
typedef arg_rd_rp_disp3 arg_LDUH_f3;
static bool trans_LDUH_f3(DisasContext *ctx, arg_LDUH_f3 *a);
typedef arg_rd_rp_disp16 arg_LDUH_f4;
static bool trans_LDUH_f4(DisasContext *ctx, arg_LDUH_f4 *a);
typedef arg_rd_rx_ry_sa arg_LDUH_f5;
static bool trans_LDUH_f5(DisasContext *ctx, arg_LDUH_f5 *a);
typedef arg_rd_rp_cond4_disp9 arg_LDUH_cond;
static bool trans_LDUH_cond(DisasContext *ctx, arg_LDUH_cond *a);
typedef arg_rd_rp arg_LDW_f1;
static bool trans_LDW_f1(DisasContext *ctx, arg_LDW_f1 *a);
typedef arg_rd_rp arg_LDW_f2;
static bool trans_LDW_f2(DisasContext *ctx, arg_LDW_f2 *a);
typedef arg_rd_disp5_rp arg_LDW_f3;
static bool trans_LDW_f3(DisasContext *ctx, arg_LDW_f3 *a);
typedef arg_rd_rp_disp16 arg_LDW_f4;
static bool trans_LDW_f4(DisasContext *ctx, arg_LDW_f4 *a);
typedef arg_rd_rx_ry_sa arg_LDW_f5;
static bool trans_LDW_f5(DisasContext *ctx, arg_LDW_f5 *a);
typedef arg_rx_ry_x_y_rd arg_LDW_f6;
static bool trans_LDW_f6(DisasContext *ctx, arg_LDW_f6 *a);
typedef arg_rd_rp_cond4_disp9 arg_LDW_cond;
static bool trans_LDW_cond(DisasContext *ctx, arg_LDW_cond *a);
typedef arg_rd_disp arg_LDDPC;
static bool trans_LDDPC(DisasContext *ctx, arg_LDDPC *a);
typedef arg_rd_disp arg_LDDSP;
static bool trans_LDDSP(DisasContext *ctx, arg_LDDSP *a);
typedef arg_ldinsb arg_LDINSB;
static bool trans_LDINSB(DisasContext *ctx, arg_LDINSB *a);
typedef arg_ldinsh arg_LDINSH;
static bool trans_LDINSH(DisasContext *ctx, arg_LDINSH *a);
typedef arg_stm arg_LDM;
static bool trans_LDM(DisasContext *ctx, arg_LDM *a);
typedef arg_stm arg_LDMTS;
static bool trans_LDMTS(DisasContext *ctx, arg_LDMTS *a);
typedef arg_rp_rd_disp12 arg_LDSWPSH;
static bool trans_LDSWPSH(DisasContext *ctx, arg_LDSWPSH *a);
typedef arg_rp_rd_disp12 arg_LDSWPUH;
static bool trans_LDSWPUH(DisasContext *ctx, arg_LDSWPUH *a);
typedef arg_rp_rd_disp12 arg_LDSWPW;
static bool trans_LDSWPW(DisasContext *ctx, arg_LDSWPW *a);
typedef arg_rx_ry_rd arg_LSL_f1;
static bool trans_LSL_f1(DisasContext *ctx, arg_LSL_f1 *a);
typedef arg_bp_4_bp1_rd arg_LSL_f2;
static bool trans_LSL_f2(DisasContext *ctx, arg_LSL_f2 *a);
typedef arg_rd_rs_sa5 arg_LSL_f3;
static bool trans_LSL_f3(DisasContext *ctx, arg_LSL_f3 *a);
typedef arg_rx_ry_rd arg_LSR_f1;
static bool trans_LSR_f1(DisasContext *ctx, arg_LSR_f1 *a);
typedef arg_bp_4_bp1_rd arg_LSR_f2;
static bool trans_LSR_f2(DisasContext *ctx, arg_LSR_f2 *a);
typedef arg_rd_rs_sa5 arg_LSR_f3;
static bool trans_LSR_f3(DisasContext *ctx, arg_LSR_f3 *a);
typedef arg_rx_ry_rd arg_MAC;
static bool trans_MAC(DisasContext *ctx, arg_MAC *a);
typedef arg_rx_ry_x_y_rd arg_MACHHD;
static bool trans_MACHHD(DisasContext *ctx, arg_MACHHD *a);
typedef arg_rx_ry_x_y_rd arg_MACHHW;
static bool trans_MACHHW(DisasContext *ctx, arg_MACHHW *a);
typedef arg_rx_ry_rd arg_MACSD;
static bool trans_MACSD(DisasContext *ctx, arg_MACSD *a);
typedef arg_rx_ry_x_y_rd arg_MACSATHHW;
static bool trans_MACSATHHW(DisasContext *ctx, arg_MACSATHHW *a);
typedef arg_rx_ry_rd arg_MACUD;
static bool trans_MACUD(DisasContext *ctx, arg_MACUD *a);
typedef arg_rx_ry_rd arg_MAX;
static bool trans_MAX(DisasContext *ctx, arg_MAX *a);
typedef arg_rp_disp arg_MCALL;
static bool trans_MCALL(DisasContext *ctx, arg_MCALL *a);
typedef arg_bp5_imm15 arg_MEMC;
static bool trans_MEMC(DisasContext *ctx, arg_MEMC *a);
typedef arg_bp5_imm15 arg_MEMS_bp5_imm15;
static bool trans_MEMS_bp5_imm15(DisasContext *ctx, arg_MEMS_bp5_imm15 *a);
typedef arg_bp5_imm15 arg_MEMT_bp5_imm15;
static bool trans_MEMT_bp5_imm15(DisasContext *ctx, arg_MEMT_bp5_imm15 *a);
typedef arg_rd_sr arg_MFSR;
static bool trans_MFSR(DisasContext *ctx, arg_MFSR *a);
typedef arg_rx_ry_rd arg_MIN;
static bool trans_MIN(DisasContext *ctx, arg_MIN *a);
typedef arg_rd_imm8 arg_MOV_f1;
static bool trans_MOV_f1(DisasContext *ctx, arg_MOV_f1 *a);
typedef arg_rd_imm21 arg_MOV_f2;
static bool trans_MOV_f2(DisasContext *ctx, arg_MOV_f2 *a);
typedef arg_rs_rd arg_MOV_f3;
static bool trans_MOV_f3(DisasContext *ctx, arg_MOV_f3 *a);
typedef arg_rd_rs_cond4 arg_MOVc_f1;
static bool trans_MOVc_f1(DisasContext *ctx, arg_MOVc_f1 *a);
typedef arg_rd_cond4_imm8 arg_MOVc_f2;
static bool trans_MOVc_f2(DisasContext *ctx, arg_MOVc_f2 *a);
typedef arg_rd_imm16 arg_MOVH;
static bool trans_MOVH(DisasContext *ctx, arg_MOVH *a);
typedef arg_mtdr arg_MTDR;
static bool trans_MTDR(DisasContext *ctx, arg_MTDR *a);
typedef arg_rs_sr arg_MTSR;
static bool trans_MTSR(DisasContext *ctx, arg_MTSR *a);
typedef arg_rs_rd arg_MUL_f1;
static bool trans_MUL_f1(DisasContext *ctx, arg_MUL_f1 *a);
typedef arg_rx_ry_rd arg_MUL_f2;
static bool trans_MUL_f2(DisasContext *ctx, arg_MUL_f2 *a);
typedef arg_rd_rs_imm8 arg_MUL_f3;
static bool trans_MUL_f3(DisasContext *ctx, arg_MUL_f3 *a);
typedef arg_rx_ry_x_y_rd arg_MULHHW;
static bool trans_MULHHW(DisasContext *ctx, arg_MULHHW *a);
typedef arg_rx_ry_rd arg_MULUD;
static bool trans_MULUD(DisasContext *ctx, arg_MULUD *a);
typedef arg_rs arg_MUSFR;
static bool trans_MUSFR(DisasContext *ctx, arg_MUSFR *a);
typedef arg_decode_insn59 arg_MUSTR;
static bool trans_MUSTR(DisasContext *ctx, arg_MUSTR *a);
typedef arg_decode_insn59 arg_NEG;
static bool trans_NEG(DisasContext *ctx, arg_NEG *a);
typedef arg_decode_insn60 arg_NOP;
static bool trans_NOP(DisasContext *ctx, arg_NOP *a);
typedef arg_rs_rd arg_OR_f1;
static bool trans_OR_f1(DisasContext *ctx, arg_OR_f1 *a);
typedef arg_rd_rx_ry_sa5 arg_OR_f2;
static bool trans_OR_f2(DisasContext *ctx, arg_OR_f2 *a);
typedef arg_rd_rx_ry_sa5 arg_OR_f3;
static bool trans_OR_f3(DisasContext *ctx, arg_OR_f3 *a);
typedef arg_rd_rx_ry_cond4 arg_OR_cond;
static bool trans_OR_cond(DisasContext *ctx, arg_OR_cond *a);
typedef arg_rd_imm16 arg_ORH;
static bool trans_ORH(DisasContext *ctx, arg_ORH *a);
typedef arg_rd_imm16 arg_ORL;
static bool trans_ORL(DisasContext *ctx, arg_ORL *a);
typedef arg_popm arg_POPM;
static bool trans_POPM(DisasContext *ctx, arg_POPM *a);
typedef arg_pushm arg_PUSHM;
static bool trans_PUSHM(DisasContext *ctx, arg_PUSHM *a);
typedef arg_disp8_disp2 arg_RCALL_f1;
static bool trans_RCALL_f1(DisasContext *ctx, arg_RCALL_f1 *a);
typedef arg_rd_imm21 arg_RCALL_f2;
static bool trans_RCALL_f2(DisasContext *ctx, arg_RCALL_f2 *a);
typedef arg_cond4_rd arg_RET;
static bool trans_RET(DisasContext *ctx, arg_RET *a);
typedef arg_decode_insn60 arg_RETE;
static bool trans_RETE(DisasContext *ctx, arg_RETE *a);
typedef arg_decode_insn60 arg_RETS;
static bool trans_RETS(DisasContext *ctx, arg_RETS *a);
typedef arg_disp8_disp2 arg_RJMP;
static bool trans_RJMP(DisasContext *ctx, arg_RJMP *a);
typedef arg_decode_insn59 arg_ROL;
static bool trans_ROL(DisasContext *ctx, arg_ROL *a);
typedef arg_decode_insn59 arg_ROR;
static bool trans_ROR(DisasContext *ctx, arg_ROR *a);
typedef arg_rs_rd arg_RSUB_f1;
static bool trans_RSUB_f1(DisasContext *ctx, arg_RSUB_f1 *a);
typedef arg_rd_rs_imm8 arg_RSUB_f2;
static bool trans_RSUB_f2(DisasContext *ctx, arg_RSUB_f2 *a);
typedef arg_rd_cond4_imm8 arg_RSUBc;
static bool trans_RSUBc(DisasContext *ctx, arg_RSUBc *a);
typedef arg_rd_bp5_sa5 arg_SATU;
static bool trans_SATU(DisasContext *ctx, arg_SATU *a);
typedef arg_rx_ry_rd arg_SBC;
static bool trans_SBC(DisasContext *ctx, arg_SBC *a);
typedef arg_bp_4_bp1_rd arg_SBR;
static bool trans_SBR(DisasContext *ctx, arg_SBR *a);
typedef arg_decode_insn60 arg_SCALL;
static bool trans_SCALL(DisasContext *ctx, arg_SCALL *a);
typedef arg_decode_insn59 arg_SCR;
static bool trans_SCR(DisasContext *ctx, arg_SCR *a);
typedef arg_op8 arg_SLEEP;
static bool trans_SLEEP(DisasContext *ctx, arg_SLEEP *a);
typedef arg_cond4_rd arg_SR;
static bool trans_SR(DisasContext *ctx, arg_SR *a);
typedef arg_bp5 arg_SSRF;
static bool trans_SSRF(DisasContext *ctx, arg_SSRF *a);
typedef arg_rp_rs arg_STB_f1;
static bool trans_STB_f1(DisasContext *ctx, arg_STB_f1 *a);
typedef arg_rp_rs arg_STB_f2;
static bool trans_STB_f2(DisasContext *ctx, arg_STB_f2 *a);
typedef arg_rd_rp_disp3 arg_STB_f3;
static bool trans_STB_f3(DisasContext *ctx, arg_STB_f3 *a);
typedef arg_rp_rs_imm16 arg_STB_f4;
static bool trans_STB_f4(DisasContext *ctx, arg_STB_f4 *a);
typedef arg_rd_rx_ry_sa arg_STB_f5;
static bool trans_STB_f5(DisasContext *ctx, arg_STB_f5 *a);
typedef arg_rd_rp_cond4_disp9 arg_STBc;
static bool trans_STBc(DisasContext *ctx, arg_STBc *a);
typedef arg_rp_rs arg_STD_f1;
static bool trans_STD_f1(DisasContext *ctx, arg_STD_f1 *a);
typedef arg_rp_rs arg_STD_f2;
static bool trans_STD_f2(DisasContext *ctx, arg_STD_f2 *a);
typedef arg_rp_rs arg_STD_f3;
static bool trans_STD_f3(DisasContext *ctx, arg_STD_f3 *a);
typedef arg_rp_rs_disp16 arg_STD_f4;
static bool trans_STD_f4(DisasContext *ctx, arg_STD_f4 *a);
typedef arg_rd_disp arg_STDSP;
static bool trans_STDSP(DisasContext *ctx, arg_STDSP *a);
typedef arg_rp_rs arg_STH_f1;
static bool trans_STH_f1(DisasContext *ctx, arg_STH_f1 *a);
typedef arg_rp_rs arg_STH_f2;
static bool trans_STH_f2(DisasContext *ctx, arg_STH_f2 *a);
typedef arg_rd_rp_disp3 arg_STH_f3;
static bool trans_STH_f3(DisasContext *ctx, arg_STH_f3 *a);
typedef arg_rp_rs_imm16 arg_STH_f4;
static bool trans_STH_f4(DisasContext *ctx, arg_STH_f4 *a);
typedef arg_rd_rx_ry_sa arg_STH_f5;
static bool trans_STH_f5(DisasContext *ctx, arg_STH_f5 *a);
typedef arg_rd_rp_cond4_disp9 arg_STHc;
static bool trans_STHc(DisasContext *ctx, arg_STHc *a);
typedef arg_stm arg_STM;
static bool trans_STM(DisasContext *ctx, arg_STM *a);
typedef arg_rp_rs arg_STW_f1;
static bool trans_STW_f1(DisasContext *ctx, arg_STW_f1 *a);
typedef arg_rp_rs arg_STW_f2;
static bool trans_STW_f2(DisasContext *ctx, arg_STW_f2 *a);
typedef arg_rs_rp_disp4 arg_STW_f3;
static bool trans_STW_f3(DisasContext *ctx, arg_STW_f3 *a);
typedef arg_rp_rs_imm16 arg_STW_f4;
static bool trans_STW_f4(DisasContext *ctx, arg_STW_f4 *a);
typedef arg_rd_rx_ry_sa arg_STW_f5;
static bool trans_STW_f5(DisasContext *ctx, arg_STW_f5 *a);
typedef arg_rd_rp_cond4_disp9 arg_STWcond;
static bool trans_STWcond(DisasContext *ctx, arg_STWcond *a);
typedef arg_rs_rd arg_SUB_f1;
static bool trans_SUB_f1(DisasContext *ctx, arg_SUB_f1 *a);
typedef arg_rd_rx_ry_sa arg_SUB_f2;
static bool trans_SUB_f2(DisasContext *ctx, arg_SUB_f2 *a);
typedef arg_rd_imm8 arg_SUB_f3;
static bool trans_SUB_f3(DisasContext *ctx, arg_SUB_f3 *a);
typedef arg_rd_imm21 arg_SUB_f4;
static bool trans_SUB_f4(DisasContext *ctx, arg_SUB_f4 *a);
typedef arg_rs_rd_disp16 arg_SUB_f5;
static bool trans_SUB_f5(DisasContext *ctx, arg_SUB_f5 *a);
typedef arg_rd_f_cond4_imm8 arg_SUBc_f1;
static bool trans_SUBc_f1(DisasContext *ctx, arg_SUBc_f1 *a);
typedef arg_rd_rx_ry_cond4 arg_SUBc_f2;
static bool trans_SUBc_f2(DisasContext *ctx, arg_SUBc_f2 *a);
typedef arg_decode_insn59 arg_TNBZ;
static bool trans_TNBZ(DisasContext *ctx, arg_TNBZ *a);
typedef arg_rs_rd arg_TST;
static bool trans_TST(DisasContext *ctx, arg_TST *a);

static void decode_insn_extract_op_bp5(DisasContext *ctx, arg_bp5 *a, uint32_t insn)
{
    a->bp5 = extract32(insn, 20, 5);
}

static void decode_insn_extract_op_bp5_imm15(DisasContext *ctx, arg_bp5_imm15 *a, uint32_t insn)
{
    a->bp5 = extract32(insn, 15, 5);
    a->imm15 = extract32(insn, 0, 15);
}

static void decode_insn_extract_op_cache(DisasContext *ctx, arg_cache *a, uint32_t insn)
{
    a->rp = extract32(insn, 16, 4);
    a->op5 = extract32(insn, 11, 5);
    a->disp11 = extract32(insn, 0, 11);
}

static void decode_insn_extract_op_coh_rd_imm(DisasContext *ctx, arg_coh_rd_imm *a, uint32_t insn)
{
    a->coh = extract32(insn, 25, 1);
    a->rd = extract32(insn, 16, 4);
    a->imm = extract32(insn, 0, 16);
}

static void decode_insn_extract_op_cond_disp21(DisasContext *ctx, arg_cond_disp21 *a, uint32_t insn)
{
    a->disp2 = extract32(insn, 25, 4);
    a->disp1 = extract32(insn, 20, 1);
    a->cond = extract32(insn, 16, 4);
    a->disp0 = extract32(insn, 0, 16);
}

static void decode_insn_extract_op_cop(DisasContext *ctx, arg_cop *a, uint32_t insn)
{
    a->oph = extract32(insn, 25, 2);
    a->opm = extract32(insn, 16, 4);
    a->cp = extract32(insn, 13, 3);
    a->opl = extract32(insn, 12, 1);
    a->crd = extract32(insn, 8, 4);
    a->crx = extract32(insn, 4, 4);
    a->cry = extract32(insn, 0, 4);
}

static void decode_insn_extract_op_disp8(DisasContext *ctx, arg_disp *a, uint32_t insn)
{
    a->disp = extract32(insn, 20, 8);
}

static void decode_insn_extract_op_disp8_disp2(DisasContext *ctx, arg_disp8_disp2 *a, uint32_t insn)
{
    a->disp8 = extract32(insn, 20, 8);
    a->disp2 = extract32(insn, 16, 2);
}

static void decode_insn_extract_op_ldinsb(DisasContext *ctx, arg_ldinsb *a, uint32_t insn)
{
    a->rp = extract32(insn, 25, 4);
    a->rd = extract32(insn, 16, 4);
    a->part = extract32(insn, 12, 2);
    a->disp12 = extract32(insn, 0, 12);
}

static void decode_insn_extract_op_ldinsh(DisasContext *ctx, arg_ldinsh *a, uint32_t insn)
{
    a->rp = extract32(insn, 25, 4);
    a->rd = extract32(insn, 16, 4);
    a->part = extract32(insn, 12, 1);
    a->disp12 = extract32(insn, 0, 12);
}

static void decode_insn_extract_op_mtdr(DisasContext *ctx, arg_mtdr *a, uint32_t insn)
{
    a->rs = extract32(insn, 16, 4);
    a->addr = extract32(insn, 0, 8);
}

static void decode_insn_extract_op_nop(DisasContext *ctx, arg_decode_insn60 *a, uint32_t insn)
{
}

static void decode_insn_extract_op_op8(DisasContext *ctx, arg_op8 *a, uint32_t insn)
{
    a->op8 = extract32(insn, 0, 8);
}

static void decode_insn_extract_op_popm(DisasContext *ctx, arg_popm *a, uint32_t insn)
{
    a->list = extract32(insn, 19, 9);
}

static void decode_insn_extract_op_pushm(DisasContext *ctx, arg_pushm *a, uint32_t insn)
{
    a->list = extract32(insn, 20, 8);
}

static void decode_insn_extract_op_rd(DisasContext *ctx, arg_decode_insn59 *a, uint32_t insn)
{
    a->rd = extract32(insn, 16, 4);
}

static void decode_insn_extract_op_rd4_rp(DisasContext *ctx, arg_rd_rp *a, uint32_t insn)
{
    a->rp = extract32(insn, 25, 4);
    a->rd = extract32(insn, 16, 4);
}

static void decode_insn_extract_op_rd_bp4_bp1(DisasContext *ctx, arg_bp_4_bp1_rd *a, uint32_t insn)
{
    a->bp4 = extract32(insn, 25, 4);
    a->bp1 = extract32(insn, 20, 1);
    a->rd = extract32(insn, 16, 4);
}

static void decode_insn_extract_op_rd_bp5(DisasContext *ctx, arg_rd_bp5 *a, uint32_t insn)
{
    a->rd = extract32(insn, 16, 4);
    a->bp5 = extract32(insn, 0, 5);
}

static void decode_insn_extract_op_rd_bp5_sa5(DisasContext *ctx, arg_rd_bp5_sa5 *a, uint32_t insn)
{
    a->rd = extract32(insn, 16, 4);
    a->bp5 = extract32(insn, 5, 5);
    a->sa5 = extract32(insn, 0, 5);
}

static void decode_insn_extract_op_rd_cond4(DisasContext *ctx, arg_cond4_rd *a, uint32_t insn)
{
    a->cond4 = extract32(insn, 20, 4);
    a->rd = extract32(insn, 16, 4);
}

static void decode_insn_extract_op_rd_cond4_imm8(DisasContext *ctx, arg_rd_cond4_imm8 *a, uint32_t insn)
{
    a->rd = extract32(insn, 16, 4);
    a->cond4 = extract32(insn, 8, 4);
    a->imm8 = extract32(insn, 0, 8);
}

static void decode_insn_extract_op_rd_disp(DisasContext *ctx, arg_rd_disp *a, uint32_t insn)
{
    a->disp = extract32(insn, 20, 7);
    a->rd = extract32(insn, 16, 4);
}

static void decode_insn_extract_op_rd_disp5_rp(DisasContext *ctx, arg_rd_disp5_rp *a, uint32_t insn)
{
    a->rp = extract32(insn, 25, 4);
    a->disp5 = extract32(insn, 20, 5);
    a->rd = extract32(insn, 16, 4);
}

static void decode_insn_extract_op_rd_disp8(DisasContext *ctx, arg_rd_disp8 *a, uint32_t insn)
{
    a->disp = extract32(insn, 20, 8);
    a->rd = extract32(insn, 16, 3);
}

static void decode_insn_extract_op_rd_f_cond4_imm8(DisasContext *ctx, arg_rd_f_cond4_imm8 *a, uint32_t insn)
{
    a->f = extract32(insn, 25, 1);
    a->rd = extract32(insn, 16, 4);
    a->cond4 = extract32(insn, 8, 4);
    a->imm8 = extract32(insn, 0, 8);
}

static void decode_insn_extract_op_rd_imm16(DisasContext *ctx, arg_rd_imm16 *a, uint32_t insn)
{
    a->rd = extract32(insn, 16, 4);
    a->imm16 = extract32(insn, 0, 16);
}

static void decode_insn_extract_op_rd_imm21(DisasContext *ctx, arg_rd_imm21 *a, uint32_t insn)
{
    a->immu = extract32(insn, 25, 4);
    a->immm = extract32(insn, 20, 1);
    a->rd = extract32(insn, 16, 4);
    a->imml = extract32(insn, 0, 16);
}

static void decode_insn_extract_op_rd_imm6(DisasContext *ctx, arg_rd_imm6 *a, uint32_t insn)
{
    a->imm6 = extract32(insn, 20, 6);
    a->rd = extract32(insn, 16, 4);
}

static void decode_insn_extract_op_rd_imm8(DisasContext *ctx, arg_rd_imm8 *a, uint32_t insn)
{
    a->imm8 = extract32(insn, 20, 8);
    a->rd = extract32(insn, 16, 4);
}

static void decode_insn_extract_op_rd_rp(DisasContext *ctx, arg_rd_rp *a, uint32_t insn)
{
    a->rp = extract32(insn, 25, 4);
    a->rd = extract32(insn, 17, 3);
}

static void decode_insn_extract_op_rd_rp_cond4_disp9(DisasContext *ctx, arg_rd_rp_cond4_disp9 *a, uint32_t insn)
{
    a->rp = extract32(insn, 25, 4);
    a->rd = extract32(insn, 16, 4);
    a->cond4 = extract32(insn, 12, 4);
    a->disp9 = extract32(insn, 0, 9);
}

static void decode_insn_extract_op_rd_rp_disp16(DisasContext *ctx, arg_rd_rp_disp16 *a, uint32_t insn)
{
    a->rp = extract32(insn, 25, 4);
    a->rd = extract32(insn, 16, 4);
    a->disp16 = extract32(insn, 0, 16);
}

static void decode_insn_extract_op_rd_rp_disp3(DisasContext *ctx, arg_rd_rp_disp3 *a, uint32_t insn)
{
    a->rp = extract32(insn, 25, 4);
    a->disp3 = extract32(insn, 20, 3);
    a->rd = extract32(insn, 16, 4);
}

static void decode_insn_extract_op_rd_rs_bp5_w5(DisasContext *ctx, arg_rd_rs_bp5_w5 *a, uint32_t insn)
{
    a->rd = extract32(insn, 25, 4);
    a->rs = extract32(insn, 16, 4);
    a->bp5 = extract32(insn, 5, 5);
    a->w5 = extract32(insn, 0, 5);
}

static void decode_insn_extract_op_rd_rs_cond4(DisasContext *ctx, arg_rd_rs_cond4 *a, uint32_t insn)
{
    a->rs = extract32(insn, 25, 4);
    a->rd = extract32(insn, 16, 4);
    a->cond4 = extract32(insn, 4, 4);
}

static void decode_insn_extract_op_rd_rs_imm8(DisasContext *ctx, arg_rd_rs_imm8 *a, uint32_t insn)
{
    a->rs = extract32(insn, 25, 4);
    a->rd = extract32(insn, 16, 4);
    a->imm8 = extract32(insn, 0, 8);
}

static void decode_insn_extract_op_rd_rs_sa5(DisasContext *ctx, arg_rd_rs_sa5 *a, uint32_t insn)
{
    a->rs = extract32(insn, 25, 4);
    a->rd = extract32(insn, 16, 4);
    a->sa5 = extract32(insn, 0, 5);
}

static void decode_insn_extract_op_rd_rx_ry(DisasContext *ctx, arg_rx_ry_rd *a, uint32_t insn)
{
    a->rx = extract32(insn, 25, 4);
    a->ry = extract32(insn, 16, 4);
    a->rd = extract32(insn, 0, 4);
}

static void decode_insn_extract_op_rd_rx_ry_cond4(DisasContext *ctx, arg_rd_rx_ry_cond4 *a, uint32_t insn)
{
    a->rx = extract32(insn, 25, 4);
    a->ry = extract32(insn, 16, 4);
    a->cond4 = extract32(insn, 8, 4);
    a->rd = extract32(insn, 0, 4);
}

static void decode_insn_extract_op_rd_rx_ry_sa(DisasContext *ctx, arg_rd_rx_ry_sa *a, uint32_t insn)
{
    a->rx = extract32(insn, 25, 4);
    a->ry = extract32(insn, 16, 4);
    a->sa = extract32(insn, 4, 2);
    a->rd = extract32(insn, 0, 4);
}

static void decode_insn_extract_op_rd_rx_ry_sa5(DisasContext *ctx, arg_rd_rx_ry_sa5 *a, uint32_t insn)
{
    a->rx = extract32(insn, 25, 4);
    a->ry = extract32(insn, 16, 4);
    a->sa5 = extract32(insn, 4, 5);
    a->rd = extract32(insn, 0, 4);
}

static void decode_insn_extract_op_rd_sr(DisasContext *ctx, arg_rd_sr *a, uint32_t insn)
{
    a->rd = extract32(insn, 16, 4);
    a->sr = extract32(insn, 0, 8);
}

static void decode_insn_extract_op_rp_disp(DisasContext *ctx, arg_rp_disp *a, uint32_t insn)
{
    a->rp = extract32(insn, 16, 4);
    a->disp = extract32(insn, 0, 16);
}

static void decode_insn_extract_op_rp_rd_disp12(DisasContext *ctx, arg_rp_rd_disp12 *a, uint32_t insn)
{
    a->rp = extract32(insn, 25, 4);
    a->rd = extract32(insn, 16, 4);
    a->disp12 = extract32(insn, 0, 12);
}

static void decode_insn_extract_op_rp_rs(DisasContext *ctx, arg_rp_rs *a, uint32_t insn)
{
    a->rp = extract32(insn, 25, 4);
    a->rs = extract32(insn, 16, 4);
}

static void decode_insn_extract_op_rp_rs3(DisasContext *ctx, arg_rp_rs *a, uint32_t insn)
{
    a->rp = extract32(insn, 25, 4);
    a->rs = extract32(insn, 17, 3);
}

static void decode_insn_extract_op_rp_rs_disp16(DisasContext *ctx, arg_rp_rs_disp16 *a, uint32_t insn)
{
    a->rp = extract32(insn, 25, 4);
    a->rs = extract32(insn, 17, 3);
    a->disp16 = extract32(insn, 0, 16);
}

static void decode_insn_extract_op_rp_rs_imm16(DisasContext *ctx, arg_rp_rs_imm16 *a, uint32_t insn)
{
    a->rp = extract32(insn, 25, 4);
    a->rs = extract32(insn, 16, 4);
    a->imm16 = extract32(insn, 0, 16);
}

static void decode_insn_extract_op_rs(DisasContext *ctx, arg_rs *a, uint32_t insn)
{
    a->rs = extract32(insn, 16, 4);
}

static void decode_insn_extract_op_rs_rd(DisasContext *ctx, arg_rs_rd *a, uint32_t insn)
{
    a->rs = extract32(insn, 25, 4);
    a->rd = extract32(insn, 16, 4);
}

static void decode_insn_extract_op_rs_rd_32(DisasContext *ctx, arg_rs_rd_32 *a, uint32_t insn)
{
    a->rs = extract32(insn, 25, 4);
    a->rd = extract32(insn, 16, 4);
}

static void decode_insn_extract_op_rs_rd_imm16(DisasContext *ctx, arg_rs_rd_disp16 *a, uint32_t insn)
{
    a->rs = extract32(insn, 25, 4);
    a->rd = extract32(insn, 16, 4);
    a->imm16 = extract32(insn, 0, 16);
}

static void decode_insn_extract_op_rs_rp_disp4(DisasContext *ctx, arg_rs_rp_disp4 *a, uint32_t insn)
{
    a->rp = extract32(insn, 25, 4);
    a->disp4 = extract32(insn, 20, 4);
    a->rs = extract32(insn, 16, 4);
}

static void decode_insn_extract_op_rs_sr(DisasContext *ctx, arg_rs_sr *a, uint32_t insn)
{
    a->rs = extract32(insn, 16, 4);
    a->sr = extract32(insn, 0, 8);
}

static void decode_insn_extract_op_rx_ry_cond_rd(DisasContext *ctx, arg_rx_ry_cond_rd *a, uint32_t insn)
{
    a->rx = extract32(insn, 25, 4);
    a->ry = extract32(insn, 16, 4);
    a->cond = extract32(insn, 8, 4);
    a->rd = extract32(insn, 0, 4);
}

static void decode_insn_extract_op_rx_ry_x_y_rd(DisasContext *ctx, arg_rx_ry_x_y_rd *a, uint32_t insn)
{
    a->rx = extract32(insn, 25, 4);
    a->ry = extract32(insn, 16, 4);
    a->x = extract32(insn, 5, 1);
    a->y = extract32(insn, 4, 1);
    a->rd = extract32(insn, 0, 4);
}

static void decode_insn_extract_op_stm(DisasContext *ctx, arg_stm *a, uint32_t insn)
{
    a->op = extract32(insn, 25, 1);
    a->rp = extract32(insn, 16, 4);
    a->list = extract32(insn, 0, 16);
}

bool decode_insn(DisasContext *ctx, uint32_t insn)
{
    union {
        arg_bp4_bp1_rd f_bp4_bp1_rd;
        arg_bp5 f_bp5;
        arg_bp5_imm15 f_bp5_imm15;
        arg_bp_4_bp1_rd f_bp_4_bp1_rd;
        arg_cache f_cache;
        arg_coh_rd_imm f_coh_rd_imm;
        arg_cond4_rd f_cond4_rd;
        arg_cond_disp21 f_cond_disp21;
        arg_cop f_cop;
        arg_decode_insn59 f_decode_insn59;
        arg_decode_insn60 f_decode_insn60;
        arg_disp f_disp;
        arg_disp8_disp2 f_disp8_disp2;
        arg_ldinsb f_ldinsb;
        arg_ldinsh f_ldinsh;
        arg_mtdr f_mtdr;
        arg_op8 f_op8;
        arg_popm f_popm;
        arg_pushm f_pushm;
        arg_rd3_rp_disp f_rd3_rp_disp;
        arg_rd_bp4_bp1 f_rd_bp4_bp1;
        arg_rd_bp5 f_rd_bp5;
        arg_rd_bp5_sa5 f_rd_bp5_sa5;
        arg_rd_cond4_imm8 f_rd_cond4_imm8;
        arg_rd_disp f_rd_disp;
        arg_rd_disp5_rp f_rd_disp5_rp;
        arg_rd_disp8 f_rd_disp8;
        arg_rd_f_cond4_imm8 f_rd_f_cond4_imm8;
        arg_rd_imm16 f_rd_imm16;
        arg_rd_imm21 f_rd_imm21;
        arg_rd_imm6 f_rd_imm6;
        arg_rd_imm8 f_rd_imm8;
        arg_rd_rp f_rd_rp;
        arg_rd_rp_cond4_disp9 f_rd_rp_cond4_disp9;
        arg_rd_rp_disp16 f_rd_rp_disp16;
        arg_rd_rp_disp3 f_rd_rp_disp3;
        arg_rd_rs_bp5_w5 f_rd_rs_bp5_w5;
        arg_rd_rs_cond4 f_rd_rs_cond4;
        arg_rd_rs_imm8 f_rd_rs_imm8;
        arg_rd_rs_sa5 f_rd_rs_sa5;
        arg_rd_rx_ry_cond4 f_rd_rx_ry_cond4;
        arg_rd_rx_ry_sa f_rd_rx_ry_sa;
        arg_rd_rx_ry_sa5 f_rd_rx_ry_sa5;
        arg_rd_sr f_rd_sr;
        arg_rp_disp f_rp_disp;
        arg_rp_rd_disp12 f_rp_rd_disp12;
        arg_rp_rs f_rp_rs;
        arg_rp_rs_disp16 f_rp_rs_disp16;
        arg_rp_rs_imm16 f_rp_rs_imm16;
        arg_rs f_rs;
        arg_rs_rd f_rs_rd;
        arg_rs_rd_32 f_rs_rd_32;
        arg_rs_rd_disp16 f_rs_rd_disp16;
        arg_rs_rp_disp4 f_rs_rp_disp4;
        arg_rs_sr f_rs_sr;
        arg_rx_ry_cond_rd f_rx_ry_cond_rd;
        arg_rx_ry_imm_rd f_rx_ry_imm_rd;
        arg_rx_ry_rd f_rx_ry_rd;
        arg_rx_ry_x_y_rd f_rx_ry_x_y_rd;
        arg_sr f_sr;
        arg_stm f_stm;
    } u;

    switch ((insn >> 29) & 0x7) {
    case 0x0:
        /* 000..... ........ ........ ........ */
        switch ((insn >> 23) & 0x3) {
        case 0x0:
            /* 000....0 0....... ........ ........ */
            decode_insn_extract_op_rs_rd(ctx, &u.f_rs_rd, insn);
            switch ((insn >> 20) & 0x7) {
            case 0x0:
                /* 000....0 0000.... ........ ........ */
                /* ../target/nxp/insn.decode:148 */
                if (trans_ADD_f1(ctx, &u.f_rs_rd)) return true;
                break;
            case 0x1:
                /* 000....0 0001.... ........ ........ */
                /* ../target/nxp/insn.decode:401 */
                if (trans_SUB_f1(ctx, &u.f_rs_rd)) return true;
                break;
            case 0x2:
                /* 000....0 0010.... ........ ........ */
                /* ../target/nxp/insn.decode:355 */
                if (trans_RSUB_f1(ctx, &u.f_rs_rd)) return true;
                break;
            case 0x3:
                /* 000....0 0011.... ........ ........ */
                /* ../target/nxp/insn.decode:201 */
                if (trans_CPW_f1(ctx, &u.f_rs_rd)) return true;
                break;
            case 0x4:
                /* 000....0 0100.... ........ ........ */
                /* ../target/nxp/insn.decode:333 */
                if (trans_OR_f1(ctx, &u.f_rs_rd)) return true;
                break;
            case 0x5:
                /* 000....0 0101.... ........ ........ */
                /* ../target/nxp/insn.decode:214 */
                if (trans_EOR_f1(ctx, &u.f_rs_rd)) return true;
                break;
            case 0x6:
                /* 000....0 0110.... ........ ........ */
                /* ../target/nxp/insn.decode:155 */
                if (trans_AND_f1(ctx, &u.f_rs_rd)) return true;
                break;
            case 0x7:
                /* 000....0 0111.... ........ ........ */
                /* ../target/nxp/insn.decode:409 */
                if (trans_TST(ctx, &u.f_rs_rd)) return true;
                break;
            }
            break;
        case 0x1:
            /* 000....0 1....... ........ ........ */
            switch ((insn >> 20) & 0x7) {
            case 0x0:
                /* 000....0 1000.... ........ ........ */
                /* ../target/nxp/insn.decode:163 */
                decode_insn_extract_op_rs_rd(ctx, &u.f_rs_rd, insn);
                if (trans_ANDN(ctx, &u.f_rs_rd)) return true;
                break;
            case 0x1:
                /* 000....0 1001.... ........ ........ */
                /* ../target/nxp/insn.decode:310 */
                decode_insn_extract_op_rs_rd(ctx, &u.f_rs_rd, insn);
                if (trans_MOV_f3(ctx, &u.f_rs_rd)) return true;
                break;
            case 0x2:
                /* 000....0 1010.... ........ ........ */
                /* ../target/nxp/insn.decode:394 */
                decode_insn_extract_op_rp_rs(ctx, &u.f_rp_rs, insn);
                if (trans_STW_f1(ctx, &u.f_rp_rs)) return true;
                break;
            case 0x3:
                /* 000....0 1011.... ........ ........ */
                /* ../target/nxp/insn.decode:386 */
                decode_insn_extract_op_rp_rs(ctx, &u.f_rp_rs, insn);
                if (trans_STH_f1(ctx, &u.f_rp_rs)) return true;
                break;
            case 0x4:
                /* 000....0 1100.... ........ ........ */
                /* ../target/nxp/insn.decode:373 */
                decode_insn_extract_op_rp_rs(ctx, &u.f_rp_rs, insn);
                if (trans_STB_f1(ctx, &u.f_rp_rs)) return true;
                break;
            case 0x5:
                /* 000....0 1101.... ........ ........ */
                /* ../target/nxp/insn.decode:395 */
                decode_insn_extract_op_rp_rs(ctx, &u.f_rp_rs, insn);
                if (trans_STW_f2(ctx, &u.f_rp_rs)) return true;
                break;
            case 0x6:
                /* 000....0 1110.... ........ ........ */
                /* ../target/nxp/insn.decode:387 */
                decode_insn_extract_op_rp_rs(ctx, &u.f_rp_rs, insn);
                if (trans_STH_f2(ctx, &u.f_rp_rs)) return true;
                break;
            case 0x7:
                /* 000....0 1111.... ........ ........ */
                /* ../target/nxp/insn.decode:374 */
                decode_insn_extract_op_rp_rs(ctx, &u.f_rp_rs, insn);
                if (trans_STB_f2(ctx, &u.f_rp_rs)) return true;
                break;
            }
            break;
        case 0x2:
            /* 000....1 0....... ........ ........ */
            decode_insn_extract_op_rd4_rp(ctx, &u.f_rd_rp, insn);
            switch ((insn >> 20) & 0x7) {
            case 0x0:
                /* 000....1 0000.... ........ ........ */
                /* ../target/nxp/insn.decode:256 */
                if (trans_LDW_f1(ctx, &u.f_rd_rp)) return true;
                break;
            case 0x1:
                /* 000....1 0001.... ........ ........ */
                /* ../target/nxp/insn.decode:242 */
                if (trans_LDSH_f1(ctx, &u.f_rd_rp)) return true;
                break;
            case 0x2:
                /* 000....1 0010.... ........ ........ */
                /* ../target/nxp/insn.decode:249 */
                if (trans_LDUH_f1(ctx, &u.f_rd_rp)) return true;
                break;
            case 0x3:
                /* 000....1 0011.... ........ ........ */
                /* ../target/nxp/insn.decode:235 */
                if (trans_LDub_f1(ctx, &u.f_rd_rp)) return true;
                break;
            case 0x4:
                /* 000....1 0100.... ........ ........ */
                /* ../target/nxp/insn.decode:257 */
                if (trans_LDW_f2(ctx, &u.f_rd_rp)) return true;
                break;
            case 0x5:
                /* 000....1 0101.... ........ ........ */
                /* ../target/nxp/insn.decode:243 */
                if (trans_LDSH_f2(ctx, &u.f_rd_rp)) return true;
                break;
            case 0x6:
                /* 000....1 0110.... ........ ........ */
                /* ../target/nxp/insn.decode:250 */
                if (trans_LDUH_f2(ctx, &u.f_rd_rp)) return true;
                break;
            case 0x7:
                /* 000....1 0111.... ........ ........ */
                /* ../target/nxp/insn.decode:236 */
                if (trans_LDub_f2(ctx, &u.f_rd_rp)) return true;
                break;
            }
            break;
        case 0x3:
            /* 000....1 1....... ........ ........ */
            /* ../target/nxp/insn.decode:237 */
            decode_insn_extract_op_rd_rp_disp3(ctx, &u.f_rd_rp_disp3, insn);
            if (trans_LDub_f3(ctx, &u.f_rd_rp_disp3)) return true;
            break;
        }
        break;
    case 0x1:
        /* 001..... ........ ........ ........ */
        decode_insn_extract_op_rd_imm8(ctx, &u.f_rd_imm8, insn);
        switch ((insn >> 28) & 0x1) {
        case 0x0:
            /* 0010.... ........ ........ ........ */
            /* ../target/nxp/insn.decode:403 */
            if (trans_SUB_f3(ctx, &u.f_rd_imm8)) return true;
            break;
        case 0x1:
            /* 0011.... ........ ........ ........ */
            /* ../target/nxp/insn.decode:308 */
            if (trans_MOV_f1(ctx, &u.f_rd_imm8)) return true;
            break;
        }
        break;
    case 0x2:
        /* 010..... ........ ........ ........ */
        switch ((insn >> 27) & 0x3) {
        case 0x0:
            /* 01000... ........ ........ ........ */
            /* ../target/nxp/insn.decode:267 */
            decode_insn_extract_op_rd_disp(ctx, &u.f_rd_disp, insn);
            if (trans_LDDSP(ctx, &u.f_rd_disp)) return true;
            break;
        case 0x1:
            /* 01001... ........ ........ ........ */
            /* ../target/nxp/insn.decode:266 */
            decode_insn_extract_op_rd_disp(ctx, &u.f_rd_disp, insn);
            if (trans_LDDPC(ctx, &u.f_rd_disp)) return true;
            break;
        case 0x2:
            /* 01010... ........ ........ ........ */
            /* ../target/nxp/insn.decode:384 */
            decode_insn_extract_op_rd_disp(ctx, &u.f_rd_disp, insn);
            if (trans_STDSP(ctx, &u.f_rd_disp)) return true;
            break;
        case 0x3:
            /* 01011... ........ ........ ........ */
            switch ((insn >> 26) & 0x1) {
            case 0x0:
                /* 010110.. ........ ........ ........ */
                /* ../target/nxp/insn.decode:202 */
                decode_insn_extract_op_rd_imm6(ctx, &u.f_rd_imm6, insn);
                if (trans_CPW_f2(ctx, &u.f_rd_imm6)) return true;
                break;
            case 0x1:
                /* 010111.. ........ ........ ........ */
                switch ((insn >> 24) & 0x3) {
                case 0x0:
                    /* 01011100 ........ ........ ........ */
                    decode_insn_extract_op_rd(ctx, &u.f_decode_insn59, insn);
                    switch ((insn >> 20) & 0xf) {
                    case 0x0:
                        /* 01011100 0000.... ........ ........ */
                        /* ../target/nxp/insn.decode:146 */
                        if (trans_ACR(ctx, &u.f_decode_insn59)) return true;
                        break;
                    case 0x1:
                        /* 01011100 0001.... ........ ........ */
                        /* ../target/nxp/insn.decode:365 */
                        if (trans_SCR(ctx, &u.f_decode_insn59)) return true;
                        break;
                    case 0x2:
                        /* 01011100 0010.... ........ ........ */
                        /* ../target/nxp/insn.decode:206 */
                        if (trans_CPC_f2(ctx, &u.f_decode_insn59)) return true;
                        break;
                    case 0x3:
                        /* 01011100 0011.... ........ ........ */
                        /* ../target/nxp/insn.decode:330 */
                        if (trans_NEG(ctx, &u.f_decode_insn59)) return true;
                        break;
                    case 0x4:
                        /* 01011100 0100.... ........ ........ */
                        /* ../target/nxp/insn.decode:143 */
                        if (trans_ABS(ctx, &u.f_decode_insn59)) return true;
                        break;
                    case 0x5:
                        /* 01011100 0101.... ........ ........ */
                        /* ../target/nxp/insn.decode:189 */
                        if (trans_CASTUB(ctx, &u.f_decode_insn59)) return true;
                        break;
                    case 0x6:
                        /* 01011100 0110.... ........ ........ */
                        /* ../target/nxp/insn.decode:187 */
                        if (trans_CASTSB(ctx, &u.f_decode_insn59)) return true;
                        break;
                    case 0x7:
                        /* 01011100 0111.... ........ ........ */
                        /* ../target/nxp/insn.decode:188 */
                        if (trans_CASTUH(ctx, &u.f_decode_insn59)) return true;
                        break;
                    case 0x8:
                        /* 01011100 1000.... ........ ........ */
                        /* ../target/nxp/insn.decode:186 */
                        if (trans_CASTSH(ctx, &u.f_decode_insn59)) return true;
                        break;
                    case 0x9:
                        /* 01011100 1001.... ........ ........ */
                        /* ../target/nxp/insn.decode:180 */
                        if (trans_BREV_r(ctx, &u.f_decode_insn59)) return true;
                        break;
                    case 0xd:
                        /* 01011100 1101.... ........ ........ */
                        /* ../target/nxp/insn.decode:195 */
                        if (trans_COM(ctx, &u.f_decode_insn59)) return true;
                        break;
                    case 0xe:
                        /* 01011100 1110.... ........ ........ */
                        /* ../target/nxp/insn.decode:408 */
                        if (trans_TNBZ(ctx, &u.f_decode_insn59)) return true;
                        break;
                    case 0xf:
                        /* 01011100 1111.... ........ ........ */
                        /* ../target/nxp/insn.decode:352 */
                        if (trans_ROL(ctx, &u.f_decode_insn59)) return true;
                        break;
                    }
                    break;
                case 0x1:
                    /* 01011101 ........ ........ ........ */
                    switch ((insn >> 20) & 0xf) {
                    case 0x0:
                        /* 01011101 0000.... ........ ........ */
                        /* ../target/nxp/insn.decode:353 */
                        decode_insn_extract_op_rd(ctx, &u.f_decode_insn59, insn);
                        if (trans_ROR(ctx, &u.f_decode_insn59)) return true;
                        break;
                    case 0x1:
                        /* 01011101 0001.... ........ ........ */
                        /* ../target/nxp/insn.decode:223 */
                        decode_insn_extract_op_rd(ctx, &u.f_decode_insn59, insn);
                        if (trans_ICALL(ctx, &u.f_decode_insn59)) return true;
                        break;
                    case 0x2:
                        /* 01011101 0010.... ........ ........ */
                        /* ../target/nxp/insn.decode:328 */
                        decode_insn_extract_op_rd(ctx, &u.f_decode_insn59, insn);
                        if (trans_MUSTR(ctx, &u.f_decode_insn59)) return true;
                        break;
                    case 0x3:
                        /* 01011101 0011.... ........ ........ */
                        /* ../target/nxp/insn.decode:327 */
                        decode_insn_extract_op_rs(ctx, &u.f_rs, insn);
                        if (trans_MUSFR(ctx, &u.f_rs)) return true;
                        break;
                    }
                    break;
                case 0x2:
                    /* 01011110 ........ ........ ........ */
                    /* ../target/nxp/insn.decode:346 */
                    decode_insn_extract_op_rd_cond4(ctx, &u.f_cond4_rd, insn);
                    if (trans_RET(ctx, &u.f_cond4_rd)) return true;
                    break;
                case 0x3:
                    /* 01011111 ........ ........ ........ */
                    /* ../target/nxp/insn.decode:369 */
                    decode_insn_extract_op_rd_cond4(ctx, &u.f_cond4_rd, insn);
                    if (trans_SR(ctx, &u.f_cond4_rd)) return true;
                    break;
                }
                break;
            }
            break;
        }
        break;
    case 0x3:
        /* 011..... ........ ........ ........ */
        /* ../target/nxp/insn.decode:258 */
        decode_insn_extract_op_rd_disp5_rp(ctx, &u.f_rd_disp5_rp, insn);
        if (trans_LDW_f3(ctx, &u.f_rd_disp5_rp)) return true;
        break;
    case 0x4:
        /* 100..... ........ ........ ........ */
        switch ((insn >> 24) & 0x1) {
        case 0x0:
            /* 100....0 ........ ........ ........ */
            decode_insn_extract_op_rd_rp_disp3(ctx, &u.f_rd_rp_disp3, insn);
            switch ((insn >> 23) & 0x1) {
            case 0x0:
                /* 100....0 0....... ........ ........ */
                /* ../target/nxp/insn.decode:244 */
                if (trans_LDSH_f3(ctx, &u.f_rd_rp_disp3)) return true;
                break;
            case 0x1:
                /* 100....0 1....... ........ ........ */
                /* ../target/nxp/insn.decode:251 */
                if (trans_LDUH_f3(ctx, &u.f_rd_rp_disp3)) return true;
                break;
            }
            break;
        case 0x1:
            /* 100....1 ........ ........ ........ */
            /* ../target/nxp/insn.decode:396 */
            decode_insn_extract_op_rs_rp_disp4(ctx, &u.f_rs_rp_disp4, insn);
            if (trans_STW_f3(ctx, &u.f_rs_rp_disp4)) return true;
            break;
        }
        break;
    case 0x5:
        /* 101..... ........ ........ ........ */
        switch ((insn >> 23) & 0x3) {
        case 0x0:
            /* 101....0 0....... ........ ........ */
            /* ../target/nxp/insn.decode:388 */
            decode_insn_extract_op_rd_rp_disp3(ctx, &u.f_rd_rp_disp3, insn);
            if (trans_STH_f3(ctx, &u.f_rd_rp_disp3)) return true;
            break;
        case 0x1:
            /* 101....0 1....... ........ ........ */
            /* ../target/nxp/insn.decode:375 */
            decode_insn_extract_op_rd_rp_disp3(ctx, &u.f_rd_rp_disp3, insn);
            if (trans_STB_f3(ctx, &u.f_rd_rp_disp3)) return true;
            break;
        case 0x2:
            /* 101....1 0....... ........ ........ */
            switch ((insn >> 21) & 0x3) {
            case 0x0:
                /* 101....1 000..... ........ ........ */
                switch (insn & 0x00110000) {
                case 0x00000000:
                    /* 101....1 0000...0 ........ ........ */
                    /* ../target/nxp/insn.decode:227 */
                    decode_insn_extract_op_rd_rp(ctx, &u.f_rd_rp, insn);
                    if (trans_LDD_f3(ctx, &u.f_rd_rp)) return true;
                    break;
                case 0x00010000:
                    /* 101....1 0000...1 ........ ........ */
                    /* ../target/nxp/insn.decode:225 */
                    decode_insn_extract_op_rd_rp(ctx, &u.f_rd_rp, insn);
                    if (trans_LDD_f1(ctx, &u.f_rd_rp)) return true;
                    break;
                case 0x00100000:
                    /* 101....1 0001...0 ........ ........ */
                    /* ../target/nxp/insn.decode:226 */
                    decode_insn_extract_op_rd_rp(ctx, &u.f_rd_rp, insn);
                    if (trans_LDD_f2(ctx, &u.f_rd_rp)) return true;
                    break;
                case 0x00110000:
                    /* 101....1 0001...1 ........ ........ */
                    /* ../target/nxp/insn.decode:382 */
                    decode_insn_extract_op_rp_rs3(ctx, &u.f_rp_rs, insn);
                    if (trans_STD_f3(ctx, &u.f_rp_rs)) return true;
                    break;
                }
                break;
            case 0x1:
                /* 101....1 001..... ........ ........ */
                switch ((insn >> 20) & 0x1) {
                case 0x0:
                    /* 101....1 0010.... ........ ........ */
                    decode_insn_extract_op_rp_rs3(ctx, &u.f_rp_rs, insn);
                    switch ((insn >> 16) & 0x1) {
                    case 0x0:
                        /* 101....1 0010...0 ........ ........ */
                        /* ../target/nxp/insn.decode:380 */
                        if (trans_STD_f1(ctx, &u.f_rp_rs)) return true;
                        break;
                    case 0x1:
                        /* 101....1 0010...1 ........ ........ */
                        /* ../target/nxp/insn.decode:381 */
                        if (trans_STD_f2(ctx, &u.f_rp_rs)) return true;
                        break;
                    }
                    break;
                case 0x1:
                    /* 101....1 0011.... ........ ........ */
                    /* ../target/nxp/insn.decode:319 */
                    decode_insn_extract_op_rs_rd(ctx, &u.f_rs_rd, insn);
                    if (trans_MUL_f1(ctx, &u.f_rs_rd)) return true;
                    break;
                }
                break;
            case 0x2:
                /* 101....1 010..... ........ ........ */
                /* ../target/nxp/insn.decode:166 */
                decode_insn_extract_op_rd_bp4_bp1(ctx, &u.f_bp_4_bp1_rd, insn);
                if (trans_ASR_f2(ctx, &u.f_bp_4_bp1_rd)) return true;
                break;
            case 0x3:
                /* 101....1 011..... ........ ........ */
                /* ../target/nxp/insn.decode:281 */
                decode_insn_extract_op_rd_bp4_bp1(ctx, &u.f_bp_4_bp1_rd, insn);
                if (trans_LSL_f2(ctx, &u.f_bp_4_bp1_rd)) return true;
                break;
            }
            break;
        case 0x3:
            /* 101....1 1....... ........ ........ */
            decode_insn_extract_op_rd_bp4_bp1(ctx, &u.f_bp_4_bp1_rd, insn);
            switch ((insn >> 21) & 0x3) {
            case 0x0:
                /* 101....1 100..... ........ ........ */
                /* ../target/nxp/insn.decode:284 */
                if (trans_LSR_f2(ctx, &u.f_bp_4_bp1_rd)) return true;
                break;
            case 0x1:
                /* 101....1 101..... ........ ........ */
                /* ../target/nxp/insn.decode:362 */
                if (trans_SBR(ctx, &u.f_bp_4_bp1_rd)) return true;
                break;
            case 0x2:
                /* 101....1 110..... ........ ........ */
                /* ../target/nxp/insn.decode:191 */
                if (trans_CBR(ctx, &u.f_bp_4_bp1_rd)) return true;
                break;
            }
            break;
        }
        break;
    case 0x6:
        /* 110..... ........ ........ ........ */
        switch ((insn >> 28) & 0x1) {
        case 0x0:
            /* 1100.... ........ ........ ........ */
            switch ((insn >> 19) & 0x1) {
            case 0x0:
                /* 1100.... ....0... ........ ........ */
                /* ../target/nxp/insn.decode:175 */
                decode_insn_extract_op_rd_disp8(ctx, &u.f_rd_disp8, insn);
                if (trans_BR_f1(ctx, &u.f_rd_disp8)) return true;
                break;
            case 0x1:
                /* 1100.... ....1... ........ ........ */
                decode_insn_extract_op_disp8_disp2(ctx, &u.f_disp8_disp2, insn);
                switch ((insn >> 18) & 0x1) {
                case 0x0:
                    /* 1100.... ....10.. ........ ........ */
                    /* ../target/nxp/insn.decode:350 */
                    if (trans_RJMP(ctx, &u.f_disp8_disp2)) return true;
                    break;
                case 0x1:
                    /* 1100.... ....11.. ........ ........ */
                    /* ../target/nxp/insn.decode:343 */
                    if (trans_RCALL_f1(ctx, &u.f_disp8_disp2)) return true;
                    break;
                }
                break;
            }
            break;
        case 0x1:
            /* 1101.... ........ ........ ........ */
            switch ((insn >> 16) & 0x7) {
            case 0x0:
                /* 1101.... .....000 ........ ........ */
                decode_insn_extract_op_disp8(ctx, &u.f_disp, insn);
                switch ((insn >> 19) & 0x1) {
                case 0x0:
                    /* 1101.... ....0000 ........ ........ */
                    /* ../target/nxp/insn.decode:144 */
                    if (trans_ACALL(ctx, &u.f_disp)) return true;
                    break;
                }
                break;
            case 0x1:
                /* 1101.... .....001 ........ ........ */
                decode_insn_extract_op_pushm(ctx, &u.f_pushm, insn);
                switch ((insn >> 19) & 0x1) {
                case 0x0:
                    /* 1101.... ....0001 ........ ........ */
                    /* ../target/nxp/insn.decode:341 */
                    if (trans_PUSHM(ctx, &u.f_pushm)) return true;
                    break;
                }
                break;
            case 0x2:
                /* 1101.... .....010 ........ ........ */
                /* ../target/nxp/insn.decode:340 */
                decode_insn_extract_op_popm(ctx, &u.f_popm, insn);
                if (trans_POPM(ctx, &u.f_popm)) return true;
                break;
            case 0x3:
                /* 1101.... .....011 ........ ........ */
                switch (insn & 0x0e080000) {
                case 0x00000000:
                    /* 1101000. ....0011 ........ ........ */
                    /* ../target/nxp/insn.decode:209 */
                    decode_insn_extract_op_bp5(ctx, &u.f_bp5, insn);
                    if (trans_CSRFCZ(ctx, &u.f_bp5)) return true;
                    break;
                case 0x02000000:
                    /* 1101001. ....0011 ........ ........ */
                    /* ../target/nxp/insn.decode:371 */
                    decode_insn_extract_op_bp5(ctx, &u.f_bp5, insn);
                    if (trans_SSRF(ctx, &u.f_bp5)) return true;
                    break;
                case 0x04000000:
                    /* 1101010. ....0011 ........ ........ */
                    /* ../target/nxp/insn.decode:208 */
                    decode_insn_extract_op_bp5(ctx, &u.f_bp5, insn);
                    if (trans_CSRF(ctx, &u.f_bp5)) return true;
                    break;
                case 0x06000000:
                    /* 1101011. ....0011 ........ ........ */
                    decode_insn_extract_op_nop(ctx, &u.f_decode_insn60, insn);
                    switch ((insn >> 20) & 0x1f) {
                    case 0x0:
                        /* 11010110 00000011 ........ ........ */
                        /* ../target/nxp/insn.decode:347 */
                        if (trans_RETE(ctx, &u.f_decode_insn60)) return true;
                        break;
                    case 0x1:
                        /* 11010110 00010011 ........ ........ */
                        /* ../target/nxp/insn.decode:348 */
                        if (trans_RETS(ctx, &u.f_decode_insn60)) return true;
                        break;
                    case 0x7:
                        /* 11010110 01110011 ........ ........ */
                        /* ../target/nxp/insn.decode:178 */
                        if (trans_BREAKPOINT(ctx, &u.f_decode_insn60)) return true;
                        break;
                    case 0x10:
                        /* 11010111 00000011 ........ ........ */
                        /* ../target/nxp/insn.decode:331 */
                        if (trans_NOP(ctx, &u.f_decode_insn60)) return true;
                        break;
                    case 0x13:
                        /* 11010111 00110011 ........ ........ */
                        /* ../target/nxp/insn.decode:364 */
                        if (trans_SCALL(ctx, &u.f_decode_insn60)) return true;
                        break;
                    case 0x14:
                        /* 11010111 01000011 ........ ........ */
                        /* ../target/nxp/insn.decode:221 */
                        if (trans_FRS(ctx, &u.f_decode_insn60)) return true;
                        break;
                    }
                    break;
                }
                break;
            }
            break;
        }
        break;
    case 0x7:
        /* 111..... ........ ........ ........ */
        switch ((insn >> 21) & 0xf) {
        case 0x0:
            /* 111....0 000..... ........ ........ */
            switch ((insn >> 20) & 0x1) {
            case 0x0:
                /* 111....0 0000.... ........ ........ */
                switch ((insn >> 8) & 0xff) {
                case 0x0:
                    /* 111....0 0000.... 00000000 ........ */
                    switch ((insn >> 6) & 0x3) {
                    case 0x0:
                        /* 111....0 0000.... 00000000 00...... */
                        /* ../target/nxp/insn.decode:149 */
                        decode_insn_extract_op_rd_rx_ry_sa(ctx, &u.f_rd_rx_ry_sa, insn);
                        if (trans_ADD_f2(ctx, &u.f_rd_rx_ry_sa)) return true;
                        break;
                    case 0x1:
                        /* 111....0 0000.... 00000000 01...... */
                        decode_insn_extract_op_rd_rx_ry(ctx, &u.f_rx_ry_rd, insn);
                        switch ((insn >> 4) & 0x3) {
                        case 0x0:
                            /* 111....0 0000.... 00000000 0100.... */
                            /* ../target/nxp/insn.decode:147 */
                            if (trans_ADC(ctx, &u.f_rx_ry_rd)) return true;
                            break;
                        }
                        break;
                    }
                    break;
                case 0x1:
                    /* 111....0 0000.... 00000001 ........ */
                    switch ((insn >> 6) & 0x3) {
                    case 0x0:
                        /* 111....0 0000.... 00000001 00...... */
                        /* ../target/nxp/insn.decode:402 */
                        decode_insn_extract_op_rd_rx_ry_sa(ctx, &u.f_rd_rx_ry_sa, insn);
                        if (trans_SUB_f2(ctx, &u.f_rd_rx_ry_sa)) return true;
                        break;
                    case 0x1:
                        /* 111....0 0000.... 00000001 01...... */
                        decode_insn_extract_op_rd_rx_ry(ctx, &u.f_rx_ry_rd, insn);
                        switch ((insn >> 4) & 0x3) {
                        case 0x0:
                            /* 111....0 0000.... 00000001 0100.... */
                            /* ../target/nxp/insn.decode:361 */
                            if (trans_SBC(ctx, &u.f_rx_ry_rd)) return true;
                            break;
                        }
                        break;
                    }
                    break;
                case 0x2:
                    /* 111....0 0000.... 00000010 ........ */
                    switch ((insn >> 6) & 0x3) {
                    case 0x0:
                        /* 111....0 0000.... 00000010 00...... */
                        /* ../target/nxp/insn.decode:229 */
                        decode_insn_extract_op_rd_rx_ry_sa(ctx, &u.f_rd_rx_ry_sa, insn);
                        if (trans_LDD_f5(ctx, &u.f_rd_rx_ry_sa)) return true;
                        break;
                    case 0x1:
                        /* 111....0 0000.... 00000010 01...... */
                        decode_insn_extract_op_rd_rx_ry(ctx, &u.f_rx_ry_rd, insn);
                        switch ((insn >> 4) & 0x3) {
                        case 0x0:
                            /* 111....0 0000.... 00000010 0100.... */
                            /* ../target/nxp/insn.decode:320 */
                            if (trans_MUL_f2(ctx, &u.f_rx_ry_rd)) return true;
                            break;
                        }
                        break;
                    }
                    break;
                case 0x3:
                    /* 111....0 0000.... 00000011 ........ */
                    switch ((insn >> 6) & 0x3) {
                    case 0x0:
                        /* 111....0 0000.... 00000011 00...... */
                        /* ../target/nxp/insn.decode:260 */
                        decode_insn_extract_op_rd_rx_ry_sa(ctx, &u.f_rd_rx_ry_sa, insn);
                        if (trans_LDW_f5(ctx, &u.f_rd_rx_ry_sa)) return true;
                        break;
                    case 0x1:
                        /* 111....0 0000.... 00000011 01...... */
                        decode_insn_extract_op_rd_rx_ry(ctx, &u.f_rx_ry_rd, insn);
                        switch ((insn >> 4) & 0x3) {
                        case 0x0:
                            /* 111....0 0000.... 00000011 0100.... */
                            /* ../target/nxp/insn.decode:288 */
                            if (trans_MAC(ctx, &u.f_rx_ry_rd)) return true;
                            break;
                        }
                        break;
                    }
                    break;
                case 0x4:
                    /* 111....0 0000.... 00000100 ........ */
                    switch ((insn >> 6) & 0x3) {
                    case 0x0:
                        /* 111....0 0000.... 00000100 00...... */
                        /* ../target/nxp/insn.decode:246 */
                        decode_insn_extract_op_rd_rx_ry_sa(ctx, &u.f_rd_rx_ry_sa, insn);
                        if (trans_LDSH_f5(ctx, &u.f_rd_rx_ry_sa)) return true;
                        break;
                    case 0x2:
                        /* 111....0 0000.... 00000100 10...... */
                        /* ../target/nxp/insn.decode:290 */
                        decode_insn_extract_op_rx_ry_x_y_rd(ctx, &u.f_rx_ry_x_y_rd, insn);
                        if (trans_MACHHW(ctx, &u.f_rx_ry_x_y_rd)) return true;
                        break;
                    }
                    break;
                case 0x5:
                    /* 111....0 0000.... 00000101 ........ */
                    switch ((insn >> 6) & 0x3) {
                    case 0x0:
                        /* 111....0 0000.... 00000101 00...... */
                        /* ../target/nxp/insn.decode:253 */
                        decode_insn_extract_op_rd_rx_ry_sa(ctx, &u.f_rd_rx_ry_sa, insn);
                        if (trans_LDUH_f5(ctx, &u.f_rd_rx_ry_sa)) return true;
                        break;
                    case 0x1:
                        /* 111....0 0000.... 00000101 01...... */
                        decode_insn_extract_op_rd_rx_ry(ctx, &u.f_rx_ry_rd, insn);
                        switch ((insn >> 4) & 0x3) {
                        case 0x0:
                            /* 111....0 0000.... 00000101 0100.... */
                            /* ../target/nxp/insn.decode:291 */
                            if (trans_MACSD(ctx, &u.f_rx_ry_rd)) return true;
                            break;
                        }
                        break;
                    case 0x2:
                        /* 111....0 0000.... 00000101 10...... */
                        /* ../target/nxp/insn.decode:289 */
                        decode_insn_extract_op_rx_ry_x_y_rd(ctx, &u.f_rx_ry_x_y_rd, insn);
                        if (trans_MACHHD(ctx, &u.f_rx_ry_x_y_rd)) return true;
                        break;
                    }
                    break;
                case 0x6:
                    /* 111....0 0000.... 00000110 ........ */
                    switch ((insn >> 6) & 0x3) {
                    case 0x0:
                        /* 111....0 0000.... 00000110 00...... */
                        /* ../target/nxp/insn.decode:232 */
                        decode_insn_extract_op_rd_rx_ry_sa(ctx, &u.f_rd_rx_ry_sa, insn);
                        if (trans_LDsb_f2(ctx, &u.f_rd_rx_ry_sa)) return true;
                        break;
                    case 0x1:
                        /* 111....0 0000.... 00000110 01...... */
                        decode_insn_extract_op_rd_rx_ry(ctx, &u.f_rx_ry_rd, insn);
                        switch ((insn >> 4) & 0x3) {
                        case 0x0:
                            /* 111....0 0000.... 00000110 0100.... */
                            /* ../target/nxp/insn.decode:324 */
                            if (trans_MULUD(ctx, &u.f_rx_ry_rd)) return true;
                            break;
                        }
                        break;
                    case 0x2:
                        /* 111....0 0000.... 00000110 10...... */
                        /* ../target/nxp/insn.decode:292 */
                        decode_insn_extract_op_rx_ry_x_y_rd(ctx, &u.f_rx_ry_x_y_rd, insn);
                        if (trans_MACSATHHW(ctx, &u.f_rx_ry_x_y_rd)) return true;
                        break;
                    }
                    break;
                case 0x7:
                    /* 111....0 0000.... 00000111 ........ */
                    switch ((insn >> 6) & 0x3) {
                    case 0x0:
                        /* 111....0 0000.... 00000111 00...... */
                        /* ../target/nxp/insn.decode:239 */
                        decode_insn_extract_op_rd_rx_ry_sa(ctx, &u.f_rd_rx_ry_sa, insn);
                        if (trans_LDub_f5(ctx, &u.f_rd_rx_ry_sa)) return true;
                        break;
                    case 0x1:
                        /* 111....0 0000.... 00000111 01...... */
                        decode_insn_extract_op_rd_rx_ry(ctx, &u.f_rx_ry_rd, insn);
                        switch ((insn >> 4) & 0x3) {
                        case 0x0:
                            /* 111....0 0000.... 00000111 0100.... */
                            /* ../target/nxp/insn.decode:293 */
                            if (trans_MACUD(ctx, &u.f_rx_ry_rd)) return true;
                            break;
                        }
                        break;
                    case 0x2:
                        /* 111....0 0000.... 00000111 10...... */
                        /* ../target/nxp/insn.decode:323 */
                        decode_insn_extract_op_rx_ry_x_y_rd(ctx, &u.f_rx_ry_x_y_rd, insn);
                        if (trans_MULHHW(ctx, &u.f_rx_ry_x_y_rd)) return true;
                        break;
                    }
                    break;
                case 0x8:
                    /* 111....0 0000.... 00001000 ........ */
                    decode_insn_extract_op_rd_rx_ry(ctx, &u.f_rx_ry_rd, insn);
                    switch ((insn >> 4) & 0xf) {
                    case 0x4:
                        /* 111....0 0000.... 00001000 0100.... */
                        /* ../target/nxp/insn.decode:165 */
                        if (trans_ASR_f1(ctx, &u.f_rx_ry_rd)) return true;
                        break;
                    }
                    break;
                case 0x9:
                    /* 111....0 0000.... 00001001 ........ */
                    switch ((insn >> 6) & 0x3) {
                    case 0x0:
                        /* 111....0 0000.... 00001001 00...... */
                        /* ../target/nxp/insn.decode:398 */
                        decode_insn_extract_op_rd_rx_ry_sa(ctx, &u.f_rd_rx_ry_sa, insn);
                        if (trans_STW_f5(ctx, &u.f_rd_rx_ry_sa)) return true;
                        break;
                    case 0x1:
                        /* 111....0 0000.... 00001001 01...... */
                        decode_insn_extract_op_rd_rx_ry(ctx, &u.f_rx_ry_rd, insn);
                        switch ((insn >> 4) & 0x3) {
                        case 0x0:
                            /* 111....0 0000.... 00001001 0100.... */
                            /* ../target/nxp/insn.decode:280 */
                            if (trans_LSL_f1(ctx, &u.f_rx_ry_rd)) return true;
                            break;
                        }
                        break;
                    }
                    break;
                case 0xa:
                    /* 111....0 0000.... 00001010 ........ */
                    switch ((insn >> 6) & 0x3) {
                    case 0x0:
                        /* 111....0 0000.... 00001010 00...... */
                        /* ../target/nxp/insn.decode:390 */
                        decode_insn_extract_op_rd_rx_ry_sa(ctx, &u.f_rd_rx_ry_sa, insn);
                        if (trans_STH_f5(ctx, &u.f_rd_rx_ry_sa)) return true;
                        break;
                    case 0x1:
                        /* 111....0 0000.... 00001010 01...... */
                        decode_insn_extract_op_rd_rx_ry(ctx, &u.f_rx_ry_rd, insn);
                        switch ((insn >> 4) & 0x3) {
                        case 0x0:
                            /* 111....0 0000.... 00001010 0100.... */
                            /* ../target/nxp/insn.decode:283 */
                            if (trans_LSR_f1(ctx, &u.f_rx_ry_rd)) return true;
                            break;
                        }
                        break;
                    }
                    break;
                case 0xb:
                    /* 111....0 0000.... 00001011 ........ */
                    decode_insn_extract_op_rd_rx_ry_sa(ctx, &u.f_rd_rx_ry_sa, insn);
                    switch ((insn >> 6) & 0x3) {
                    case 0x0:
                        /* 111....0 0000.... 00001011 00...... */
                        /* ../target/nxp/insn.decode:377 */
                        if (trans_STB_f5(ctx, &u.f_rd_rx_ry_sa)) return true;
                        break;
                    }
                    break;
                case 0xc:
                    /* 111....0 0000.... 00001100 ........ */
                    decode_insn_extract_op_rd_rx_ry(ctx, &u.f_rx_ry_rd, insn);
                    switch ((insn >> 4) & 0xf) {
                    case 0x0:
                        /* 111....0 0000.... 00001100 0000.... */
                        /* ../target/nxp/insn.decode:211 */
                        if (trans_DIVS(ctx, &u.f_rx_ry_rd)) return true;
                        break;
                    case 0x4:
                        /* 111....0 0000.... 00001100 0100.... */
                        /* ../target/nxp/insn.decode:295 */
                        if (trans_MAX(ctx, &u.f_rx_ry_rd)) return true;
                        break;
                    }
                    break;
                case 0xd:
                    /* 111....0 0000.... 00001101 ........ */
                    decode_insn_extract_op_rd_rx_ry(ctx, &u.f_rx_ry_rd, insn);
                    switch ((insn >> 4) & 0xf) {
                    case 0x0:
                        /* 111....0 0000.... 00001101 0000.... */
                        /* ../target/nxp/insn.decode:212 */
                        if (trans_DIVU(ctx, &u.f_rx_ry_rd)) return true;
                        break;
                    case 0x4:
                        /* 111....0 0000.... 00001101 0100.... */
                        /* ../target/nxp/insn.decode:306 */
                        if (trans_MIN(ctx, &u.f_rx_ry_rd)) return true;
                        break;
                    }
                    break;
                case 0xe:
                    /* 111....0 0000.... 00001110 ........ */
                    switch ((insn >> 6) & 0x3) {
                    case 0x0:
                        /* 111....0 0000.... 00001110 00...... */
                        /* ../target/nxp/insn.decode:153 */
                        decode_insn_extract_op_rx_ry_x_y_rd(ctx, &u.f_rx_ry_x_y_rd, insn);
                        if (trans_ADDHHW(ctx, &u.f_rx_ry_x_y_rd)) return true;
                        break;
                    case 0x1:
                        /* 111....0 0000.... 00001110 01...... */
                        decode_insn_extract_op_rd_rx_ry(ctx, &u.f_rx_ry_rd, insn);
                        switch ((insn >> 4) & 0x3) {
                        case 0x0:
                            /* 111....0 0000.... 00001110 0100.... */
                            /* ../target/nxp/insn.decode:152 */
                            if (trans_ADDABS(ctx, &u.f_rx_ry_rd)) return true;
                            break;
                        }
                        break;
                    }
                    break;
                case 0xf:
                    /* 111....0 0000.... 00001111 ........ */
                    decode_insn_extract_op_rx_ry_x_y_rd(ctx, &u.f_rx_ry_x_y_rd, insn);
                    switch ((insn >> 6) & 0x3) {
                    case 0x2:
                        /* 111....0 0000.... 00001111 10...... */
                        /* ../target/nxp/insn.decode:261 */
                        if (trans_LDW_f6(ctx, &u.f_rx_ry_x_y_rd)) return true;
                        break;
                    }
                    break;
                case 0x10:
                    /* 111....0 0000.... 00010000 ........ */
                    /* ../target/nxp/insn.decode:321 */
                    decode_insn_extract_op_rd_rs_imm8(ctx, &u.f_rd_rs_imm8, insn);
                    if (trans_MUL_f3(ctx, &u.f_rd_rs_imm8)) return true;
                    break;
                case 0x11:
                    /* 111....0 0000.... 00010001 ........ */
                    /* ../target/nxp/insn.decode:356 */
                    decode_insn_extract_op_rd_rs_imm8(ctx, &u.f_rd_rs_imm8, insn);
                    if (trans_RSUB_f2(ctx, &u.f_rd_rs_imm8)) return true;
                    break;
                case 0x12:
                    /* 111....0 0000.... 00010010 ........ */
                    decode_insn_extract_op_rs_rd_32(ctx, &u.f_rs_rd_32, insn);
                    switch (insn & 0x000000ff) {
                    case 0x00000000:
                        /* 111....0 0000.... 00010010 00000000 */
                        /* ../target/nxp/insn.decode:193 */
                        if (trans_CLZ(ctx, &u.f_rs_rd_32)) return true;
                        break;
                    }
                    break;
                case 0x13:
                    /* 111....0 0000.... 00010011 ........ */
                    decode_insn_extract_op_rs_rd_32(ctx, &u.f_rs_rd_32, insn);
                    switch (insn & 0x000000ff) {
                    case 0x00000000:
                        /* 111....0 0000.... 00010011 00000000 */
                        /* ../target/nxp/insn.decode:205 */
                        if (trans_CPC_f1(ctx, &u.f_rs_rd_32)) return true;
                        break;
                    }
                    break;
                case 0x14:
                    /* 111....0 0000.... 00010100 ........ */
                    decode_insn_extract_op_rd_rs_sa5(ctx, &u.f_rd_rs_sa5, insn);
                    switch ((insn >> 5) & 0x7) {
                    case 0x0:
                        /* 111....0 0000.... 00010100 000..... */
                        /* ../target/nxp/insn.decode:167 */
                        if (trans_ASR_f3(ctx, &u.f_rd_rs_sa5)) return true;
                        break;
                    }
                    break;
                case 0x15:
                    /* 111....0 0000.... 00010101 ........ */
                    decode_insn_extract_op_rd_rs_sa5(ctx, &u.f_rd_rs_sa5, insn);
                    switch ((insn >> 5) & 0x7) {
                    case 0x0:
                        /* 111....0 0000.... 00010101 000..... */
                        /* ../target/nxp/insn.decode:282 */
                        if (trans_LSL_f3(ctx, &u.f_rd_rs_sa5)) return true;
                        break;
                    }
                    break;
                case 0x16:
                    /* 111....0 0000.... 00010110 ........ */
                    decode_insn_extract_op_rd_rs_sa5(ctx, &u.f_rd_rs_sa5, insn);
                    switch ((insn >> 5) & 0x7) {
                    case 0x0:
                        /* 111....0 0000.... 00010110 000..... */
                        /* ../target/nxp/insn.decode:285 */
                        if (trans_LSR_f3(ctx, &u.f_rd_rs_sa5)) return true;
                        break;
                    }
                    break;
                case 0x17:
                    /* 111....0 0000.... 00010111 ........ */
                    decode_insn_extract_op_rd_rs_cond4(ctx, &u.f_rd_rs_cond4, insn);
                    switch (insn & 0x0000000f) {
                    case 0x00000000:
                        /* 111....0 0000.... 00010111 ....0000 */
                        /* ../target/nxp/insn.decode:311 */
                        if (trans_MOVc_f1(ctx, &u.f_rd_rs_cond4)) return true;
                        break;
                    }
                    break;
                case 0x18:
                    /* 111....0 0000.... 00011000 ........ */
                    decode_insn_extract_op_rs_rd_32(ctx, &u.f_rs_rd_32, insn);
                    switch (insn & 0x000000ff) {
                    case 0x00000000:
                        /* 111....0 0000.... 00011000 00000000 */
                        /* ../target/nxp/insn.decode:199 */
                        if (trans_CPB(ctx, &u.f_rs_rd_32)) return true;
                        break;
                    }
                    break;
                case 0x19:
                    /* 111....0 0000.... 00011001 ........ */
                    decode_insn_extract_op_rs_rd_32(ctx, &u.f_rs_rd_32, insn);
                    switch (insn & 0x000000ff) {
                    case 0x00000000:
                        /* 111....0 0000.... 00011001 00000000 */
                        /* ../target/nxp/insn.decode:200 */
                        if (trans_CPH(ctx, &u.f_rs_rd_32)) return true;
                        break;
                    }
                    break;
                }
                break;
            case 0x1:
                /* 111....0 0001.... ........ ........ */
                switch ((insn >> 26) & 0x7) {
                case 0x0:
                    /* 111000.0 0001.... ........ ........ */
                    /* ../target/nxp/insn.decode:162 */
                    decode_insn_extract_op_coh_rd_imm(ctx, &u.f_coh_rd_imm, insn);
                    if (trans_ANDL(ctx, &u.f_coh_rd_imm)) return true;
                    break;
                case 0x1:
                    /* 111001.0 0001.... ........ ........ */
                    /* ../target/nxp/insn.decode:161 */
                    decode_insn_extract_op_coh_rd_imm(ctx, &u.f_coh_rd_imm, insn);
                    if (trans_ANDH(ctx, &u.f_coh_rd_imm)) return true;
                    break;
                case 0x2:
                    /* 111010.0 0001.... ........ ........ */
                    decode_insn_extract_op_rd_imm16(ctx, &u.f_rd_imm16, insn);
                    switch ((insn >> 25) & 0x1) {
                    case 0x0:
                        /* 11101000 0001.... ........ ........ */
                        /* ../target/nxp/insn.decode:338 */
                        if (trans_ORL(ctx, &u.f_rd_imm16)) return true;
                        break;
                    case 0x1:
                        /* 11101010 0001.... ........ ........ */
                        /* ../target/nxp/insn.decode:337 */
                        if (trans_ORH(ctx, &u.f_rd_imm16)) return true;
                        break;
                    }
                    break;
                case 0x3:
                    /* 111011.0 0001.... ........ ........ */
                    decode_insn_extract_op_rd_imm16(ctx, &u.f_rd_imm16, insn);
                    switch ((insn >> 25) & 0x1) {
                    case 0x0:
                        /* 11101100 0001.... ........ ........ */
                        /* ../target/nxp/insn.decode:219 */
                        if (trans_EORL(ctx, &u.f_rd_imm16)) return true;
                        break;
                    case 0x1:
                        /* 11101110 0001.... ........ ........ */
                        /* ../target/nxp/insn.decode:218 */
                        if (trans_EORH(ctx, &u.f_rd_imm16)) return true;
                        break;
                    }
                    break;
                case 0x4:
                    /* 111100.0 0001.... ........ ........ */
                    decode_insn_extract_op_rp_disp(ctx, &u.f_rp_disp, insn);
                    switch ((insn >> 25) & 0x1) {
                    case 0x0:
                        /* 11110000 0001.... ........ ........ */
                        /* ../target/nxp/insn.decode:297 */
                        if (trans_MCALL(ctx, &u.f_rp_disp)) return true;
                        break;
                    }
                    break;
                case 0x5:
                    /* 111101.0 0001.... ........ ........ */
                    switch ((insn >> 25) & 0x1) {
                    case 0x0:
                        /* 11110100 0001.... ........ ........ */
                        /* ../target/nxp/insn.decode:184 */
                        decode_insn_extract_op_cache(ctx, &u.f_cache, insn);
                        if (trans_CACHE(ctx, &u.f_cache)) return true;
                        break;
                    case 0x1:
                        /* 11110110 0001.... ........ ........ */
                        /* ../target/nxp/insn.decode:299 */
                        decode_insn_extract_op_bp5_imm15(ctx, &u.f_bp5_imm15, insn);
                        if (trans_MEMC(ctx, &u.f_bp5_imm15)) return true;
                        break;
                    }
                    break;
                case 0x6:
                    /* 111110.0 0001.... ........ ........ */
                    decode_insn_extract_op_bp5_imm15(ctx, &u.f_bp5_imm15, insn);
                    switch ((insn >> 25) & 0x1) {
                    case 0x0:
                        /* 11111000 0001.... ........ ........ */
                        /* ../target/nxp/insn.decode:300 */
                        if (trans_MEMS_bp5_imm15(ctx, &u.f_bp5_imm15)) return true;
                        break;
                    case 0x1:
                        /* 11111010 0001.... ........ ........ */
                        /* ../target/nxp/insn.decode:301 */
                        if (trans_MEMT_bp5_imm15(ctx, &u.f_bp5_imm15)) return true;
                        break;
                    }
                    break;
                case 0x7:
                    /* 111111.0 0001.... ........ ........ */
                    decode_insn_extract_op_rd_imm16(ctx, &u.f_rd_imm16, insn);
                    switch ((insn >> 25) & 0x1) {
                    case 0x0:
                        /* 11111100 0001.... ........ ........ */
                        /* ../target/nxp/insn.decode:315 */
                        if (trans_MOVH(ctx, &u.f_rd_imm16)) return true;
                        break;
                    }
                    break;
                }
                break;
            }
            break;
        case 0x1:
            /* 111....0 001..... ........ ........ */
            /* ../target/nxp/insn.decode:404 */
            decode_insn_extract_op_rd_imm21(ctx, &u.f_rd_imm21, insn);
            if (trans_SUB_f4(ctx, &u.f_rd_imm21)) return true;
            break;
        case 0x2:
            /* 111....0 010..... ........ ........ */
            /* ../target/nxp/insn.decode:203 */
            decode_insn_extract_op_rd_imm21(ctx, &u.f_rd_imm21, insn);
            if (trans_CPW_f3(ctx, &u.f_rd_imm21)) return true;
            break;
        case 0x3:
            /* 111....0 011..... ........ ........ */
            /* ../target/nxp/insn.decode:309 */
            decode_insn_extract_op_rd_imm21(ctx, &u.f_rd_imm21, insn);
            if (trans_MOV_f2(ctx, &u.f_rd_imm21)) return true;
            break;
        case 0x4:
            /* 111....0 100..... ........ ........ */
            /* ../target/nxp/insn.decode:176 */
            decode_insn_extract_op_cond_disp21(ctx, &u.f_cond_disp21, insn);
            if (trans_BR_f2(ctx, &u.f_cond_disp21)) return true;
            break;
        case 0x5:
            /* 111....0 101..... ........ ........ */
            /* ../target/nxp/insn.decode:344 */
            decode_insn_extract_op_rd_imm21(ctx, &u.f_rd_imm21, insn);
            if (trans_RCALL_f2(ctx, &u.f_rd_imm21)) return true;
            break;
        case 0x6:
            /* 111....0 110..... ........ ........ */
            decode_insn_extract_op_rs_rd_imm16(ctx, &u.f_rs_rd_disp16, insn);
            switch ((insn >> 20) & 0x1) {
            case 0x0:
                /* 111....0 1100.... ........ ........ */
                /* ../target/nxp/insn.decode:405 */
                if (trans_SUB_f5(ctx, &u.f_rs_rd_disp16)) return true;
                break;
            }
            break;
        case 0x7:
            /* 111....0 111..... ........ ........ */
            switch ((insn >> 20) & 0x1) {
            case 0x0:
                /* 111....0 1110.... ........ ........ */
                decode_insn_extract_op_rp_rs_disp16(ctx, &u.f_rp_rs_disp16, insn);
                switch ((insn >> 16) & 0x1) {
                case 0x0:
                    /* 111....0 1110...0 ........ ........ */
                    /* ../target/nxp/insn.decode:228 */
                    if (trans_LDD_f4(ctx, &u.f_rp_rs_disp16)) return true;
                    break;
                case 0x1:
                    /* 111....0 1110...1 ........ ........ */
                    /* ../target/nxp/insn.decode:383 */
                    if (trans_STD_f4(ctx, &u.f_rp_rs_disp16)) return true;
                    break;
                }
                break;
            case 0x1:
                /* 111....0 1111.... ........ ........ */
                /* ../target/nxp/insn.decode:259 */
                decode_insn_extract_op_rd_rp_disp16(ctx, &u.f_rd_rp_disp16, insn);
                if (trans_LDW_f4(ctx, &u.f_rd_rp_disp16)) return true;
                break;
            }
            break;
        case 0x8:
            /* 111....1 000..... ........ ........ */
            decode_insn_extract_op_rd_rp_disp16(ctx, &u.f_rd_rp_disp16, insn);
            switch ((insn >> 20) & 0x1) {
            case 0x0:
                /* 111....1 0000.... ........ ........ */
                /* ../target/nxp/insn.decode:245 */
                if (trans_LDSH_f4(ctx, &u.f_rd_rp_disp16)) return true;
                break;
            case 0x1:
                /* 111....1 0001.... ........ ........ */
                /* ../target/nxp/insn.decode:252 */
                if (trans_LDUH_f4(ctx, &u.f_rd_rp_disp16)) return true;
                break;
            }
            break;
        case 0x9:
            /* 111....1 001..... ........ ........ */
            decode_insn_extract_op_rd_rp_disp16(ctx, &u.f_rd_rp_disp16, insn);
            switch ((insn >> 20) & 0x1) {
            case 0x0:
                /* 111....1 0010.... ........ ........ */
                /* ../target/nxp/insn.decode:231 */
                if (trans_LDsb_f1(ctx, &u.f_rd_rp_disp16)) return true;
                break;
            case 0x1:
                /* 111....1 0011.... ........ ........ */
                /* ../target/nxp/insn.decode:238 */
                if (trans_LDUB_f4(ctx, &u.f_rd_rp_disp16)) return true;
                break;
            }
            break;
        case 0xa:
            /* 111....1 010..... ........ ........ */
            decode_insn_extract_op_rp_rs_imm16(ctx, &u.f_rp_rs_imm16, insn);
            switch ((insn >> 20) & 0x1) {
            case 0x0:
                /* 111....1 0100.... ........ ........ */
                /* ../target/nxp/insn.decode:397 */
                if (trans_STW_f4(ctx, &u.f_rp_rs_imm16)) return true;
                break;
            case 0x1:
                /* 111....1 0101.... ........ ........ */
                /* ../target/nxp/insn.decode:389 */
                if (trans_STH_f4(ctx, &u.f_rp_rs_imm16)) return true;
                break;
            }
            break;
        case 0xb:
            /* 111....1 011..... ........ ........ */
            decode_insn_extract_op_rp_rs_imm16(ctx, &u.f_rp_rs_imm16, insn);
            switch ((insn >> 20) & 0x1) {
            case 0x0:
                /* 111....1 0110.... ........ ........ */
                /* ../target/nxp/insn.decode:376 */
                if (trans_STB_f4(ctx, &u.f_rp_rs_imm16)) return true;
                break;
            }
            break;
        case 0xd:
            /* 111....1 101..... ........ ........ */
            switch (insn & 0x18100000) {
            case 0x00000000:
                /* 11100..1 1010.... ........ ........ */
                /* ../target/nxp/insn.decode:197 */
                decode_insn_extract_op_cop(ctx, &u.f_cop, insn);
                if (trans_COP(ctx, &u.f_cop)) return true;
                break;
            case 0x00100000:
                /* 11100..1 1011.... ........ ........ */
                switch (insn & 0x0600ff00) {
                case 0x00000000:
                    /* 11100001 1011.... 00000000 ........ */
                    /* ../target/nxp/insn.decode:303 */
                    decode_insn_extract_op_rd_sr(ctx, &u.f_rd_sr, insn);
                    if (trans_MFSR(ctx, &u.f_rd_sr)) return true;
                    break;
                case 0x02000000:
                    /* 11100011 1011.... 00000000 ........ */
                    /* ../target/nxp/insn.decode:317 */
                    decode_insn_extract_op_rs_sr(ctx, &u.f_rs_sr, insn);
                    if (trans_MTSR(ctx, &u.f_rs_sr)) return true;
                    break;
                case 0x06000000:
                    /* 11100111 1011.... 00000000 ........ */
                    /* ../target/nxp/insn.decode:316 */
                    decode_insn_extract_op_mtdr(ctx, &u.f_mtdr, insn);
                    if (trans_MTDR(ctx, &u.f_mtdr)) return true;
                    break;
                }
                break;
            case 0x08100000:
                /* 11101..1 1011.... ........ ........ */
                switch (insn & 0x0600ff00) {
                case 0x00000000:
                    /* 11101001 1011.... 00000000 ........ */
                    decode_insn_extract_op_op8(ctx, &u.f_op8, insn);
                    switch ((insn >> 16) & 0xf) {
                    case 0x0:
                        /* 11101001 10110000 00000000 ........ */
                        /* ../target/nxp/insn.decode:367 */
                        if (trans_SLEEP(ctx, &u.f_op8)) return true;
                        break;
                    }
                    break;
                case 0x04000000:
                    /* 11101101 1011.... 00000000 ........ */
                    decode_insn_extract_op_rd_bp5(ctx, &u.f_rd_bp5, insn);
                    switch ((insn >> 5) & 0x7) {
                    case 0x0:
                        /* 11101101 1011.... 00000000 000..... */
                        /* ../target/nxp/insn.decode:173 */
                        if (trans_BLD(ctx, &u.f_rd_bp5)) return true;
                        break;
                    }
                    break;
                case 0x06000000:
                    /* 11101111 1011.... 00000000 ........ */
                    decode_insn_extract_op_rd_bp5(ctx, &u.f_rd_bp5, insn);
                    switch ((insn >> 5) & 0x7) {
                    case 0x0:
                        /* 11101111 1011.... 00000000 000..... */
                        /* ../target/nxp/insn.decode:182 */
                        if (trans_BST(ctx, &u.f_rd_bp5)) return true;
                        break;
                    }
                    break;
                }
                break;
            case 0x10100000:
                /* 11110..1 1011.... ........ ........ */
                switch (insn & 0x0400f000) {
                case 0x00000000:
                    /* 111100.1 1011.... 0000.... ........ */
                    decode_insn_extract_op_rd_bp5_sa5(ctx, &u.f_rd_bp5_sa5, insn);
                    switch (insn & 0x02000c00) {
                    case 0x00000400:
                        /* 11110001 1011.... 000001.. ........ */
                        /* ../target/nxp/insn.decode:359 */
                        if (trans_SATU(ctx, &u.f_rd_bp5_sa5)) return true;
                        break;
                    }
                    break;
                case 0x04000000:
                    /* 111101.1 1011.... 0000.... ........ */
                    /* ../target/nxp/insn.decode:406 */
                    decode_insn_extract_op_rd_f_cond4_imm8(ctx, &u.f_rd_f_cond4_imm8, insn);
                    if (trans_SUBc_f1(ctx, &u.f_rd_f_cond4_imm8)) return true;
                    break;
                }
                break;
            case 0x18100000:
                /* 11111..1 1011.... ........ ........ */
                decode_insn_extract_op_rd_cond4_imm8(ctx, &u.f_rd_cond4_imm8, insn);
                switch (insn & 0x0600f000) {
                case 0x00000000:
                    /* 11111001 1011.... 0000.... ........ */
                    /* ../target/nxp/insn.decode:312 */
                    if (trans_MOVc_f2(ctx, &u.f_rd_cond4_imm8)) return true;
                    break;
                case 0x02000000:
                    /* 11111011 1011.... 0000.... ........ */
                    /* ../target/nxp/insn.decode:357 */
                    if (trans_RSUBc(ctx, &u.f_rd_cond4_imm8)) return true;
                    break;
                }
                break;
            }
            break;
        case 0xe:
            /* 111....1 110..... ........ ........ */
            switch ((insn >> 20) & 0x1) {
            case 0x0:
                /* 111....1 1100.... ........ ........ */
                decode_insn_extract_op_stm(ctx, &u.f_stm, insn);
                switch ((insn >> 26) & 0x7) {
                case 0x0:
                    /* 111000.1 1100.... ........ ........ */
                    /* ../target/nxp/insn.decode:272 */
                    if (trans_LDM(ctx, &u.f_stm)) return true;
                    break;
                case 0x1:
                    /* 111001.1 1100.... ........ ........ */
                    /* ../target/nxp/insn.decode:274 */
                    if (trans_LDMTS(ctx, &u.f_stm)) return true;
                    break;
                case 0x2:
                    /* 111010.1 1100.... ........ ........ */
                    /* ../target/nxp/insn.decode:392 */
                    if (trans_STM(ctx, &u.f_stm)) return true;
                    break;
                }
                break;
            case 0x1:
                /* 111....1 1101.... ........ ........ */
                switch ((insn >> 14) & 0x3) {
                case 0x0:
                    /* 111....1 1101.... 00...... ........ */
                    switch ((insn >> 13) & 0x1) {
                    case 0x0:
                        /* 111....1 1101.... 000..... ........ */
                        /* ../target/nxp/insn.decode:270 */
                        decode_insn_extract_op_ldinsh(ctx, &u.f_ldinsh, insn);
                        if (trans_LDINSH(ctx, &u.f_ldinsh)) return true;
                        break;
                    case 0x1:
                        /* 111....1 1101.... 001..... ........ */
                        decode_insn_extract_op_rp_rd_disp12(ctx, &u.f_rp_rd_disp12, insn);
                        switch ((insn >> 12) & 0x1) {
                        case 0x0:
                            /* 111....1 1101.... 0010.... ........ */
                            /* ../target/nxp/insn.decode:276 */
                            if (trans_LDSWPSH(ctx, &u.f_rp_rd_disp12)) return true;
                            break;
                        case 0x1:
                            /* 111....1 1101.... 0011.... ........ */
                            /* ../target/nxp/insn.decode:277 */
                            if (trans_LDSWPUH(ctx, &u.f_rp_rd_disp12)) return true;
                            break;
                        }
                        break;
                    }
                    break;
                case 0x1:
                    /* 111....1 1101.... 01...... ........ */
                    /* ../target/nxp/insn.decode:269 */
                    decode_insn_extract_op_ldinsb(ctx, &u.f_ldinsb, insn);
                    if (trans_LDINSB(ctx, &u.f_ldinsb)) return true;
                    break;
                case 0x2:
                    /* 111....1 1101.... 10...... ........ */
                    switch ((insn >> 12) & 0x3) {
                    case 0x0:
                        /* 111....1 1101.... 1000.... ........ */
                        /* ../target/nxp/insn.decode:278 */
                        decode_insn_extract_op_rp_rd_disp12(ctx, &u.f_rp_rd_disp12, insn);
                        if (trans_LDSWPW(ctx, &u.f_rp_rd_disp12)) return true;
                        break;
                    case 0x3:
                        /* 111....1 1101.... 1011.... ........ */
                        decode_insn_extract_op_rd_rs_bp5_w5(ctx, &u.f_rd_rs_bp5_w5, insn);
                        switch ((insn >> 10) & 0x3) {
                        case 0x0:
                            /* 111....1 1101.... 101100.. ........ */
                            /* ../target/nxp/insn.decode:169 */
                            if (trans_BFEXTS(ctx, &u.f_rd_rs_bp5_w5)) return true;
                            break;
                        }
                        break;
                    }
                    break;
                case 0x3:
                    /* 111....1 1101.... 11...... ........ */
                    switch ((insn >> 12) & 0x3) {
                    case 0x0:
                        /* 111....1 1101.... 1100.... ........ */
                        decode_insn_extract_op_rd_rs_bp5_w5(ctx, &u.f_rd_rs_bp5_w5, insn);
                        switch ((insn >> 10) & 0x3) {
                        case 0x0:
                            /* 111....1 1101.... 110000.. ........ */
                            /* ../target/nxp/insn.decode:170 */
                            if (trans_BFEXTU(ctx, &u.f_rd_rs_bp5_w5)) return true;
                            break;
                        }
                        break;
                    case 0x1:
                        /* 111....1 1101.... 1101.... ........ */
                        decode_insn_extract_op_rd_rs_bp5_w5(ctx, &u.f_rd_rs_bp5_w5, insn);
                        switch ((insn >> 10) & 0x3) {
                        case 0x0:
                            /* 111....1 1101.... 110100.. ........ */
                            /* ../target/nxp/insn.decode:171 */
                            if (trans_BFINS(ctx, &u.f_rd_rs_bp5_w5)) return true;
                            break;
                        }
                        break;
                    case 0x2:
                        /* 111....1 1101.... 1110.... ........ */
                        switch ((insn >> 4) & 0xf) {
                        case 0x0:
                            /* 111....1 1101.... 1110.... 0000.... */
                            /* ../target/nxp/insn.decode:150 */
                            decode_insn_extract_op_rx_ry_cond_rd(ctx, &u.f_rx_ry_cond_rd, insn);
                            if (trans_ADD_cond(ctx, &u.f_rx_ry_cond_rd)) return true;
                            break;
                        case 0x1:
                            /* 111....1 1101.... 1110.... 0001.... */
                            /* ../target/nxp/insn.decode:407 */
                            decode_insn_extract_op_rd_rx_ry_cond4(ctx, &u.f_rd_rx_ry_cond4, insn);
                            if (trans_SUBc_f2(ctx, &u.f_rd_rx_ry_cond4)) return true;
                            break;
                        case 0x2:
                            /* 111....1 1101.... 1110.... 0010.... */
                            /* ../target/nxp/insn.decode:160 */
                            decode_insn_extract_op_rx_ry_cond_rd(ctx, &u.f_rx_ry_cond_rd, insn);
                            if (trans_AND_cond(ctx, &u.f_rx_ry_cond_rd)) return true;
                            break;
                        case 0x3:
                            /* 111....1 1101.... 1110.... 0011.... */
                            /* ../target/nxp/insn.decode:336 */
                            decode_insn_extract_op_rd_rx_ry_cond4(ctx, &u.f_rd_rx_ry_cond4, insn);
                            if (trans_OR_cond(ctx, &u.f_rd_rx_ry_cond4)) return true;
                            break;
                        case 0x4:
                            /* 111....1 1101.... 1110.... 0100.... */
                            /* ../target/nxp/insn.decode:217 */
                            decode_insn_extract_op_rx_ry_cond_rd(ctx, &u.f_rx_ry_cond_rd, insn);
                            if (trans_EOR_cond(ctx, &u.f_rx_ry_cond_rd)) return true;
                            break;
                        }
                        break;
                    }
                    break;
                }
                break;
            }
            break;
        case 0xf:
            /* 111....1 111..... ........ ........ */
            switch (insn & 0x00100e00) {
            case 0x00000000:
                /* 111....1 1110.... ....000. ........ */
                decode_insn_extract_op_rd_rx_ry_sa5(ctx, &u.f_rd_rx_ry_sa5, insn);
                switch ((insn >> 12) & 0xf) {
                case 0x0:
                    /* 111....1 1110.... 0000000. ........ */
                    /* ../target/nxp/insn.decode:156 */
                    if (trans_AND_f2(ctx, &u.f_rd_rx_ry_sa5)) return true;
                    break;
                case 0x1:
                    /* 111....1 1110.... 0001000. ........ */
                    /* ../target/nxp/insn.decode:334 */
                    if (trans_OR_f2(ctx, &u.f_rd_rx_ry_sa5)) return true;
                    break;
                case 0x2:
                    /* 111....1 1110.... 0010000. ........ */
                    /* ../target/nxp/insn.decode:215 */
                    if (trans_EOR_f2(ctx, &u.f_rd_rx_ry_sa5)) return true;
                    break;
                }
                break;
            case 0x00000200:
                /* 111....1 1110.... ....001. ........ */
                decode_insn_extract_op_rd_rx_ry_sa5(ctx, &u.f_rd_rx_ry_sa5, insn);
                switch ((insn >> 12) & 0xf) {
                case 0x0:
                    /* 111....1 1110.... 0000001. ........ */
                    /* ../target/nxp/insn.decode:157 */
                    if (trans_AND_f3(ctx, &u.f_rd_rx_ry_sa5)) return true;
                    break;
                case 0x1:
                    /* 111....1 1110.... 0001001. ........ */
                    /* ../target/nxp/insn.decode:335 */
                    if (trans_OR_f3(ctx, &u.f_rd_rx_ry_sa5)) return true;
                    break;
                case 0x2:
                    /* 111....1 1110.... 0010001. ........ */
                    /* ../target/nxp/insn.decode:216 */
                    if (trans_EOR_f3(ctx, &u.f_rd_rx_ry_sa5)) return true;
                    break;
                }
                break;
            case 0x00100000:
                /* 111....1 1111.... ....000. ........ */
                /* ../target/nxp/insn.decode:262 */
                decode_insn_extract_op_rd_rp_cond4_disp9(ctx, &u.f_rd_rp_cond4_disp9, insn);
                if (trans_LDW_cond(ctx, &u.f_rd_rp_cond4_disp9)) return true;
                break;
            case 0x00100200:
                /* 111....1 1111.... ....001. ........ */
                /* ../target/nxp/insn.decode:247 */
                decode_insn_extract_op_rd_rp_cond4_disp9(ctx, &u.f_rd_rp_cond4_disp9, insn);
                if (trans_LDSH_cond(ctx, &u.f_rd_rp_cond4_disp9)) return true;
                break;
            case 0x00100400:
                /* 111....1 1111.... ....010. ........ */
                /* ../target/nxp/insn.decode:254 */
                decode_insn_extract_op_rd_rp_cond4_disp9(ctx, &u.f_rd_rp_cond4_disp9, insn);
                if (trans_LDUH_cond(ctx, &u.f_rd_rp_cond4_disp9)) return true;
                break;
            case 0x00100600:
                /* 111....1 1111.... ....011. ........ */
                /* ../target/nxp/insn.decode:233 */
                decode_insn_extract_op_rd_rp_cond4_disp9(ctx, &u.f_rd_rp_cond4_disp9, insn);
                if (trans_LDsb_cond(ctx, &u.f_rd_rp_cond4_disp9)) return true;
                break;
            case 0x00100800:
                /* 111....1 1111.... ....100. ........ */
                /* ../target/nxp/insn.decode:240 */
                decode_insn_extract_op_rd_rp_cond4_disp9(ctx, &u.f_rd_rp_cond4_disp9, insn);
                if (trans_LDUB_cond(ctx, &u.f_rd_rp_cond4_disp9)) return true;
                break;
            case 0x00100a00:
                /* 111....1 1111.... ....101. ........ */
                /* ../target/nxp/insn.decode:399 */
                decode_insn_extract_op_rd_rp_cond4_disp9(ctx, &u.f_rd_rp_cond4_disp9, insn);
                if (trans_STWcond(ctx, &u.f_rd_rp_cond4_disp9)) return true;
                break;
            case 0x00100c00:
                /* 111....1 1111.... ....110. ........ */
                /* ../target/nxp/insn.decode:391 */
                decode_insn_extract_op_rd_rp_cond4_disp9(ctx, &u.f_rd_rp_cond4_disp9, insn);
                if (trans_STHc(ctx, &u.f_rd_rp_cond4_disp9)) return true;
                break;
            case 0x00100e00:
                /* 111....1 1111.... ....111. ........ */
                /* ../target/nxp/insn.decode:378 */
                decode_insn_extract_op_rd_rp_cond4_disp9(ctx, &u.f_rd_rp_cond4_disp9, insn);
                if (trans_STBc(ctx, &u.f_rd_rp_cond4_disp9)) return true;
                break;
            }
            break;
        }
        break;
    }
    return false;
}

uint32_t decode_insn_load(DisasContext *ctx)
{
    uint32_t insn = 0;

    insn = decode_insn_load_bytes(ctx, insn, 0, 2);
    switch ((insn >> 29) & 0x7) {
    case 0x0:
        /* 000..... ........ ........ ........ */
        return insn;
    case 0x1:
        /* 001..... ........ ........ ........ */
        return insn;
    case 0x2:
        /* 010..... ........ ........ ........ */
        return insn;
    case 0x3:
        /* 011..... ........ ........ ........ */
        return insn;
    case 0x4:
        /* 100..... ........ ........ ........ */
        return insn;
    case 0x5:
        /* 101..... ........ ........ ........ */
        return insn;
    case 0x6:
        /* 110..... ........ ........ ........ */
        return insn;
    case 0x7:
        /* 111..... ........ ........ ........ */
        insn = decode_insn_load_bytes(ctx, insn, 2, 4);
        return insn;
    }
    return insn;
}
